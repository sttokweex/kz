var Util = require("../../../../utils/slot_utils")

function ApiManager() { }

ApiManager.prototype.InitApi = function (player, param) {
    var result = {
        balance_bonus: "0.00",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        bl: "0",
        bls: "25,30",
        bonuses: "0",
        c: "100.00",
        cfgs: "3389",
        counter: "2",
        def_s: "7,8,6,11,11,7,7,6,8,11,2,9,6,8,11,13,13,6,8,3",
        def_sa: "4,8,11,12,11",
        def_sb: "10,2,1,5,3",
        defc: "100.00",
        fsbonus: "",
        gameInfo: `{props:{max_rnd_sim:"1",max_rnd_hr:"31250000",max_rnd_win:"3000"}}`,
        gmb: "0,0,0",
        index: "1",
        l: "25",
        mo_jp_mask: "jp3;jp2;jp1",
        mo_jp: "1250;2500;12500",
        mo_s: "12",
        mo_v: "25,50,75,100,125,150,200,250,375,625,1250,2500,12500",
        na: "s",
        nas: "13",
        paytable: "0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;200,75,50,0,0;100,50,20,0,0;50,25,10,0,0;25,10,8,0,0;20,8,4,0,0;15,8,4,0,0;10,5,2,0,0;10,5,2,0,0;10,5,2,0,0;0,0,0,0,0;0,0,0,0,0",
        reel_set_size: 3,
        reel_set: "0",
        reel_set0: "11,11,11,5,5,8,8,3,9,8,8,5,5,7,6,6,9,9,2,10,9,8,6,6,7,7,5,5,10,6,10,11,2,8,8,9,4,4,7,10,10,7,10,4,7,7,5,5,11,5,11,11,9,9,11,2,7,11,7,7,6,6,11,10,10,2,10,4,4,11,6,11,4,11,9,9,3,3,11,9,2,11,8,9,11,7,9,9,10,3,3,10,9,8,10,8,8,2,8,9,4,9,8,8,2,8,4,4,10,9,7,10,7,7,2,7,5,5,11,11,5,5,10,10,7,2,7,7,6,7,10,6,6,10,10,2,4,10,9,4,11,11,7,8,8,3,3,11,5,7,7,6,9,6,10,4,10,10,6,10,4,11,3,11,11,4,11,9,9,3,9,8,9,11,9,9,11,9,9,3,8,7,9,10,7,8,10,5,10,9,8,2,10,11,7,8,9,4,10,8,5,10,7,10~7,7,8,8,5,5,7,7,2,8,8,11,11,3,5,9,4,11,6,11,11,9,2,6,10,3,9,6,6,8,8,11,9,9,6,6,10,10,7,5,5,10,7,11,11,11,2,9,9,5,5,7,9,6,6,7,7,4,7,7,9,6,8,2,9,8,8,3,6,9,11,10,11,2,9,9,6,10,2,10,10,6,6,4,4,7,2,7,7,4,4,6,6,10,10,2,10,10,11,11,11,3,11,10,9,5,4,9,5,3,11,8,9,2,11,3,6,10,11,7,10,2,7,8,9~11,10,3,11,4,12,12,12,12,10,11,6,6,6,6,1,7,10,3,3,3,3,10,7,10,9,9,10,12,10,9,12,12,6,8,12,12,8,11,3,3,3,3,12,7,5,5,12,11,3,4,11,7,8,3,10,9,9,5,4,7,12,12,7,3,3,10,6,11,1,7,4,5,3,3,3,7,12,12,12,10,7,10,10,4,5,3,3,3,7,12,12,12,12,8,12,12~7,7,12,12,12,12,6,6,11,11,11,12,12,7,7,12,12,4,4,9,9,12,6,6,6,6,12,12,10,10,12,8,8,4,4,4,12,12,12,10,8,8,8,5,5,5,5,10,10,10,12,12,12,3,3,8,8,8,12,12,9,9,9,9,11,11,11,5,5,5,5,12,12,12,12,4,4,4,4,7,7,7,7,6,6,6,12,12,9,9,12,12,12,4,4,11,11,11,12,12,6,6,6,8,8,12,12,3,3,3,3,8,8,12,12,12,7,12,12,5,5,5,5,7,7,7,12,12,8,8,8,12,12,12,10,8,12,12,12,12,8,5,6,7,3,8,5,4,8,3,6,8,3,5,6,9,11,12,12,12,7,4,7,5,8,7,3,8,5,6,3,8,10,9,6,8,4,7,11,6,5,11,6,3,8,9,7,5,9,12,12,12,12,12,12,12,12,9,5,6,9~11,11,11,11,3,3,3,3,8,8,8,8,10,10,10,9,9,9,9,12,12,12,12,4,4,4,4,7,7,7,7,9,5,9,11,8,5,10,11,7,10,12,12,4,4,12,12,9,9,7,7,7,5,5,5,5,12,12,12,12,12,12,10,11,11,11,3,11,10,9,5,4,9,11,7,6,11,10,3,8,11,3,9,12,12,12,12,11,10,9,11,8,5,10,11,7,10,8,12,12,12,12,12,12,12,12,5,9,9,9,9,7,7,7,7,12,12,12,12,10,10,11,11,11,3,11,10,9,5,4,9,11,7,6,11,10,3,8,11,12,12,12,12,3,6,11,10,9,11,8,5,10,11,7,10,9,4,8,10,9,6,10,9,11,12,12,8,11,9,4,12,12,12,12,7,8,10,7,8,6,5,8,12,12,12,12,12,12,12,5,9,3,10,9,5,12,12,12,12,12,12",
        reel_set1: "5,2,9,7,2,11,11,3,2,9,8,2,7,6,2,7,10,2,4~8,2,8,3,2,10,10,2,11,2,8,11,2,9,9,4,2,6,5,10,2,10,9,2,11,10,2,7~11,11,3,11,4,12,12,12,12,10,10,10,6,6,6,6,9,9,7,7,7,1,12,12,10,10,10,12,12,12,12,8,8,8,8,11,11,12,12,12,12,4,4,12,12,3,6,12,12,12,8,11,9,3,3,3,12,12,5,5,12,12,3,4,11,7,8,3,10,9,5,5,4,12,12,12,12,3,11,8,6,6,5,3,10,6,11,7,7,4,5,3,3,3,7,12,12,12,12,12,12,12~7,7,12,12,12,12,6,6,11,6,6,6,6,12,12,10,10,12,12,5,5,8,8,8,8,3,3,3,11,11,12,12,12,9,9,9,12,12,4,4,4,12,12,12,10,8,8,8,5,5,5,5,10,10,10,12,12,12,3,3,8,8,8,12,12,9,9,11,11,11,5,5,5,5,12,12,12,12,4,4,4,4,12,7,7,7,6,6,6,12,12,9,9,12,12,12,4,4,11,11,11,12,12,6,6,6,8,8,12,12,3,3,3,3,8,8,12,12,12,12,12,12,5,5,5,5,7,7,7,12,12,8,8,8,12,12,12,12,12,12,12,12,12,8,5,6,7,3,8,5,4,8,3,6,8,3,5,6,9,11,12,12,12,12,4,7,5,8,7,3,8,5,6,3,8,10,9,6,8,4,7,11,6,5,11,6,3,8,9,7,5,9,12,12,12,12,12,12,12,12,9,5,6,9~11,11,11,11,3,3,3,3,8,12,4,4,4,4,7,7,7,7,12,9,9,9,5,5,5,5,7,7,7,12,11,11,11,12,12,12,11,10,9,11,8,8,8,8,5,10,11,12,12,12,12,4,4,12,12,12,9,7,7,7,5,5,5,5,12,12,12,12,12,12,10,11,11,11,3,11,10,9,5,4,9,11,7,6,11,10,3,8,11,3,9,12,12,12,12,11,10,9,11,8,5,10,11,7,10,10,10,8,12,12,12,12,12,12,12,12,5,9,9,9,9,7,7,7,7,12,12,12,12,10,10,11,11,11,3,11,10,9,5,4,9,11,7,6,11,10,3,8,11,12,12,12,12,3,6,11,10,9,11,8,5,10,11,7,10,9,4,8,10,9,6,10,9,11,12,12,8,11,9,4,12,12,12,12,7,8,10,7,8,6,5,8,12,12,12,12,12,12,12,5,9,3,10,9,5,12,12,12,12,12,12",
        reel_set2: "11,11,11,5,5,8,10,10,2,8,8,5,5,2,6,6,8,9,2,8,9,8,6,6,7,7,5,5,2,6,10,5,7,11,7,7,6,6,10,11,10,2,10,4,4,11,6,11,4,11,2,9,3,3,11,9,2,11,3,9,11,3,9,10,9,3,3,10,9,2,10,8,8,2,8,9,4,9,8,8,2,8,4,4,10,9,7,2,7,7,2,7,5,5,11,2,5,5,10,10,7,2,7,7,6,7,2,6,6,10,10,2,4,10,9,4,11,11,3,11,2,3,3,8,5,9,7,6,2,6,10,4,10,10,6,10,4,11,3,11,11,4,11,3,2,3,9,8,9,11,9,2,11,9,9,3,8,3,9,10,7,2,10,5,10,9,8,2,10,11,7,8,9,4,10,2,5,10,7,10~7,7,2,8,5,5,7,7,2,8,8,11,2,11,5,9,9,2,6,11,11,9,2,6,10,10,2,6,6,8,8,5,7,4,7,2,9,6,8,2,8,9,8,3,3,2,9,11,11,2,9,3,9,10,2,10,10,6,2,4,4,7,2,7,7,4,4,6,6,10,10,2,10,10,11,2,11,3,11,10,2,5,4,9,3,3,11,8,9,2,11,3,6,10,11,7,10,2,7,8,9~11,10,3,11,4,12,12,12,12,10,11,6,6,6,6,1,7,10,7,3,3,3,10,7,10,9,9,12,12,12,9,10,9,1,5,4,7,12,12,7,3,3,10,6,11,1,7,4,5,3,3,3,7,12,12,12,12,12,12,12,10,7,10,12,12,12,12,10,4,5,3,3,3,7,12,12,12,12,8,12,12~7,7,12,12,12,12,6,6,11,11,11,12,12,7,7,12,12,4,4,9,9,12,6,6,6,6,12,12,10,10,12,12,8,8,12,12,9,9,11,11,11,5,5,5,5,12,12,12,12,10,10,10,4,4,4,4,7,12,7,7,6,6,6,12,12,9,9,9,9,12,12,12,4,4,12,11,11,12,12,6,6,6,8,8,12,12,3,3,3,3,8,8,12,12,12,7,12,12,5,5,5,5,7,7,7,12,12,8,8,8,12,12,12,10,8,12,12,12,12,8,5,6,7,3,8,5,4,8,3,6,8,3,5,6,9,11,12,12,12,7,4,7,5,8,7,3,8,5,6,3,8,10,9,6,8,4,7,11,6,5,11,6,3,8,9,7,5,9,12,12,12,12,12,12,12,12,9,5,6,9~11,11,11,11,3,3,3,3,8,8,8,8,10,10,10,9,9,9,9,12,12,12,12,4,4,4,4,7,7,7,7,12,12,12,12,12,12,12,10,11,11,11,3,11,12,9,5,4,12,11,7,6,11,10,3,8,11,3,9,12,12,12,12,11,10,9,11,8,5,10,11,7,10,8,12,12,12,12,12,12,12,12,5,5,5,5,9,9,9,12,12,7,7,7,12,12,12,12,10,10,11,11,11,3,11,10,9,5,4,9,11,7,6,11,10,3,8,11,12,12,12,12,3,6,11,10,9,11,8,5,10,11,7,10,9,4,8,10,9,6,10,9,11,12,12,8,11,9,4,12,12,12,12,7,8,10,7,8,6,5,8,12,12,12,12,12,12,12,5,9,3,10,9,5,12,12,12,12,12,12",
        rt: "d",
        rtp: "96.00,96.77",
        s: "7,8,6,11,11,7,7,6,8,11,2,9,6,8,11,13,13,6,8,3",
        sa: "4,8,11,12,11",
        sb: "10,2,1,5,3",
        sc: "10.00,20.00,30.00,40.00,50.00,100.00,200.00,300.00,400.00,500.00,750.00,1000.00,2000.00,3000.00,4000.00,5000.00",
        scatters: "1~0,0,0,0,0~0,0,0,0,0~1,1,1,1,1",
        sh: "4",
        stime: "1629939208592",
        sver: "5",
        t: "243",
        total_bet_max: "100000.0",
        total_bet_min: "250",
        ver: "2",
        wilds: "2~0,0,0,0,0~1,1,1,1,1",
    };

    // API          
    result["stime"] = new Date().getTime();

    //              api            
    if (player.lastPattern) {
        for (var key in player.lastPattern) {
            result[key] = player.lastPattern[key];
        }
    }

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["index"] = param.index;
    result["counter"] = ++param.counter;

    if (player.betPerLine > 0) {
        result["c"] = player.betPerLine;
        result["defc"] = player.betPerLine;
    }

    return result;
};

ApiManager.prototype.GameApi = function (player, prevGameMode, param) {
    var result = {
        balance_bonus: "0",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        bl: "0",
        c: "100.00",
        counter: "1",
        index: "1",
        l: "25",
        na: "s",
        reel_set: "0",
        s: "",
        stime: new Date().getTime(),
        sa: "",
        sb: "",
        sh: "4",
        sver: "5",   
        tw: "0.00",
        w: "0.00",
    };

    //          ,                          
    var screenAbove = Util.view2String(player.machine.virtualReels.above);
    var screenBelow = Util.view2String(player.machine.virtualReels.below);
    result["sa"] = screenAbove;
    result["sb"] = screenBelow;
    result["s"] = Util.view2String(player.machine.view);
    result["c"] = player.betPerLine;
    result["tw"] = player.machine.winMoney;
    result["w"] = player.machine.winMoney;
    result["bl"] = player.machine.bl == true ? 1 : 0;

    //                                 
    var winLines = player.machine.winLines;
    for (var i = 0; i < winLines.length; i++) {
        result[`l${i}`] = winLines[i];
    }
    result["index"] = param.index;
    result["counter"] = ++param.counter;
    //                                           
    var nextAction = "s";
    if (player.machine.winMoney > 0) {
        nextAction = "c";
    }

    //             api
    if (player.machine.moneyCache != null) {
        result["mo"] = player.machine.moneyCache.values.join();
        result["mo_t"] = player.machine.moneyCache.table.join();
    }
    if (player.machine.moneyTotalValue / player.betPerLine > 0) {
        result["mo_c"] = 1;
        result["mo_tv"] = player.machine.moneyTotalValue / player.betPerLine;
        result["mo_tw"] = player.machine.moneyTotalValue;
        result["mo_wpos"] = player.machine.moneyPositions.join();
    }

    result["na"] = nextAction;
    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;

    if (prevGameMode == "BASE") {
        if (player.machine.currentGame == "FREE") {
            result["fs"] = 1;
            result["fsmax"] = player.machine.freeSpinLength;
            result["fsmul"] = 1;
            result["fswin"] = "0.00";
            result["fsres"] = "0.00";
            result["na"] = "s";
        }
    } else if (prevGameMode == "FREE") {
        //                       
        result["tw"] = player.machine.freeSpinWinMoney;
        result["reel_set"] = 2;

        if (player.machine.isFreeSpinAdd) {
            result["fsmore"] = 10;
        }

        if (player.machine.currentGame == "FREE") {
            result["na"] = "s";
            result["fs"] = player.machine.freeSpinIndex;
            result["fsmax"] = player.machine.freeSpinLength;
            result["fsmul"] = 1;
            result["fswin"] = player.machine.freeSpinWinMoney;
            result["fsres"] = player.machine.freeSpinWinMoney;
        } else if (player.machine.currentGame == "BASE") {
            //                                     ->                       
            result["na"] = "c";
            result["fs_total"] = player.machine.freeSpinLength;
            result["fsmul_total"] = 1;
            result["fswin_total"] = player.machine.freeSpinWinMoney;
            result["fsres_total"] = player.machine.freeSpinWinMoney;
        }
    }

    return result;
}

ApiManager.prototype.CollectApi = function (player, param) {
    var result = {
        balance_bonus: "0.0",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        counter: "2",
        index: "3",
        na: "s",
        stime: "1629939208592",
        sver: "5",
    };

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["stime"] = new Date().getTime();
    result["index"] = param.index;
    result["counter"] = ++param.counter;

    return result;
}

module.exports = ApiManager;