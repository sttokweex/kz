var Util = require("../../../../utils/slot_utils")

function ApiManager() { }

ApiManager.prototype.InitApi = function (player, param) {
    var result = {
        def_s: "3,10,3,3,10,3,3,9,3,3,9,3,7,9,6,6,9,7,7,8,6,6,8,7,6,8,10,12,8,6,6,10,10,12,10,6,8,10,10,12,10,8",
        balance: "100,000.00",
        nas: "14",
        cfgs: "1",
        ver: "2",
        index: "1",
        balance_cash: "100,000.00",
        def_sb: "8,10,5,11,10,8",
        reel_set_size: "5",
        def_sa: "8,10,6,5,10,8",
        reel_set: "0",
        balance_bonus: "0.00",
        na: "s",
        scatters: "1~0,0,0,0,0,0~0,0,0,0,0,0~1,1,1,1,1,1",
        gmb: "0,0,0",
        rt: "d",
        gameInfo: "{props:{max_rnd_sim:\"1\",max_rnd_hr:\"16393442\",max_rnd_win:\"10000\"}}",
        wl_i: "tbm~10000",
        stime: "1645605926656",
        sa: "8,10,6,5,10,8",
        sb: "8,10,5,11,10,8",
        sc: "10.00,20.00,30.00,40.00,50.00,100.00,200.00,300.00,400.00,500.00,750.00,1000.00,2000.00,3000.00,4000.00,5000.00",
        defc: "100.00",
        sh: "7",
        wilds: "2~0,0,0,0,0,0~1,1,1,1,1,1;13~0,0,0,0,0,0~1,1,1,1,1,1",
        bonuses: "0",
        fsbonus: "",
        c: "100.00",
        sver: "5",
        counter: "2",
        paytable: "0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;50,30,15,10,0,0;20,15,12,8,0,0;15,12,10,6,0,0;12,10,8,5,0,0;12,10,8,5,0,0;10,8,6,4,0,0;10,8,6,4,0,0;8,7,5,2,0,0;8,7,5,2,0,0;8,7,5,2,0,0;0,0,0,0,0,0;0,0,0,0,0,0",
        l: "20",
        rtp: "96.48",
        reel_set0: "3,3,7,7,6,6,8,9,9,6,6,7,7,11,11,3,3,5,5,1,11,11,12,12,9,9,10,10,8,8,9,9,11,11,4,4,8,8,10,10,11,11,8,8,4,4,11,11,5,5,1,9,9,11,11,8,8,3,3,6,6,8,8,11,11,12,12,7,7,10,10,1,9,9,7,7,6,6,12,12,12,10,10,10,5,5,8,8~3,3,10,10,9,9,8,5,5,10,10,10,4,4,11,11,6,6,11,11,11,10,10,12,12,12,9,9,9,5,5,11,11,11,7,7,1,8,8,11,11,7,7,8,8,6,6,7,7,7,8,8,9,9,7,7,4,4,11,11,11,9,9,9,5,5,6,6,6,1,5,5,3,3,12,12,12,7,7,7,4,4,8,8~3,3,6,6,10,10,10,4,10,10,8,8,8,1,12,12,10,10,3,3,7,7,8,8,7,7,7,12,12,10,10,11,11,6,6,1,8,8,11,11,11,6,6,12,12,12,5,5,5,4,4,10,10,10,5,5,7,7,9,9,9,5,5,1,11,11,9,9,10,10,10,8,8,11,11,7,7,7,7,11,11,11,6,6,6~3,3,6,6,12,12,12,4,10,10,8,8,8,1,12,12,10,10,3,3,7,7,8,8,7,7,7,12,12,10,10,11,11,6,6,1,8,8,11,11,11,6,6,12,12,12,5,5,5,4,4,10,10,10,5,5,7,7,9,9,9,5,5~3,3,10,10,9,9,8,5,5,10,10,10,4,4,11,11,6,6,11,11,11,10,10,12,12,12,9,9,9,5,5,12,12,12,7,7,1,8,8,12,12,7,7,8,8,6,6,7,7,7,8,8,9,9,7,7,4,4,12,12,12,9,9,9,5,5,6,6,6,1,5,5,3,3,12,12,12,7,7,7,4,4,8,8~3,3,7,7,6,6,8,9,9,6,6,7,7,11,11,3,3,5,5,11,11,12,12,9,9,10,10,8,8,9,9,12,12,4,4,8,8,10,10,12,12,8,8,4,4,12,12,5,5,1,9,9,12,12,8,8,3,3,6,6,8,8,11,11,12,12,7,7,10,10,1,9,9,7,7,6,6,12,12,12,10,10,10,5,5,8,8",
        s: "3,10,3,3,10,3,3,9,3,3,9,3,7,9,6,6,9,7,7,8,6,6,8,7,6,8,10,12,8,6,6,10,10,12,10,6,8,10,10,12,10,8",
        reel_set2: "12,12,12,12,7,7,6,6,9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8~9,6,6,3,3,11,11,11,6,6,5,5,12,12,4,4,10,10,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~3,3,7,7,9,4,4,10,10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~3,3,7,7,9,4,4,10,10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~10,6,6,3,3,11,11,11,6,6,5,5,12,12,4,4,9,9,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~12,12,12,12,7,7,6,6,9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8",
        t: "243",
        reel_set1: "7,7,6,6,9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8~11,11,11,6,6,5,5,12,12,4,4,10,10,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~10,10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~10,10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~11,11,11,6,6,5,5,12,12,4,4,9,9,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~7,7,6,6,9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8",
        reel_set4: "9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8~6,6,5,5,12,12,4,4,10,10,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~6,6,5,5,12,12,4,4,9,9,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8",
        reel_set3: "12,12,12,7,7,6,6,9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8~6,6,3,3,11,11,11,6,6,5,5,12,12,4,4,10,10,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~3,7,7,9,4,4,10,10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~3,7,7,9,4,4,10,10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~6,6,3,3,11,11,11,6,6,5,5,12,12,4,4,9,9,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~12,12,12,7,7,6,6,9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8"
    };

    //              api            
    if (player.lastPattern) {
        for (var key in player.lastPattern) {
            result[key] = player.lastPattern[key];
        }
    }

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["index"] = param.index;
    result["counter"] = ++param.counter;
    result["stime"] = new Date().getTime();

    if (player.betPerLine > 0) {
        result["c"] = player.betPerLine;
        result["defc"] = player.betPerLine;
    }
    return result;
};

ApiManager.prototype.GameApi = function (player, prevGameMode, param) {
    var result = {
        balance_bonus: "0",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        c: "100.00",
        counter: "1",
        index: "1",
        l: "20",
        na: "s",
        reel_set: "0",
        s: "13,9,13,6,7,5,8,11,13,12,12,5,8,11,7,12,12,14,14,6,7,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14",
        stime: new Date().getTime(),
        sa: "",
        sb: "",
        sh: "7",
        sver: "5",   
        tw: "0.00",
        w: "0.00",
    };

    //          ,                          
    var screenAbove = Util.view2String(player.machine.virtualReels.above);
    var screenBelow = Util.view2String(player.machine.virtualReels.below);
    result["sa"] = screenAbove;
    result["sb"] = screenBelow;
    result["s"] = Util.view2String(player.machine.view);
    result["c"] = player.betPerLine;
    result["tw"] = player.machine.winMoney;
    result["w"] = player.machine.winMoney;

    //                                 
    if (player.machine.winMoney > 0) {
        result["wlc_v"] = player.machine.winLines;
    }
    result["index"] = param.index;
    result["counter"] = ++param.counter;
    //                                           
    var nextAction = "s";
    if (player.machine.winMoney > 0) {
        nextAction = "c";
    }

    result["na"] = nextAction;
    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;

    if (player.machine.wildFlag) {
        result["rwd"] = player.machine.rwdStr;
        result["ep"] = player.machine.epStr;
        result["srf"] = player.machine.srfStr;
        result["is"] = Util.view2String(player.machine.isView);
    }

    if (prevGameMode == "BASE") {
        if (player.machine.currentGame == "FREE") {
            if (player.machine.nugeStr != "") {
                result["sn"] = player.machine.nugeStr;
            }
            result["fs"] = 1;
            result["fsmax"] = player.machine.freeSpinLength;
            result["fsmul"] = 1;
            result["fsres"] = 0.0;
            result["fswin"] = 0.0;
            result["na"] = "s";
        }
    } else if (prevGameMode == "FREE") {
        //                       
        result["tw"] = player.machine.freeSpinWinMoney;

        if (player.machine.stickyStr != "") {
            result["sty"] = player.machine.stickyStr;
        }

        if (player.machine.currentGame == "FREE") {
            result["na"] = "s";
            result["fs"] = player.machine.freeSpinIndex;
            result["fsmax"] = player.machine.freeSpinLength;
            result["fsmul"] = 1;
            result["fswin"] = player.machine.freeSpinWinMoney;
            result["fsres"] = player.machine.freeSpinWinMoney;
        } else if (player.machine.currentGame == "BASE") {
            //                                     ->                       
            result["na"] = "c";
            result["fs_total"] = player.machine.freeSpinLength;
            result["fsend_total"] = 1;
            result["fsmul_total"] = 1;
            result["fswin_total"] = player.machine.freeSpinWinMoney;
            result["fsres_total"] = player.machine.freeSpinWinMoney;
        }
    }

    return result;
}

ApiManager.prototype.CollectApi = function (player, param) {
    var result = {
        balance_bonus: "0.0",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        counter: "2",
        index: "3",
        na: "s",
        stime: "1629939208592",
        sver: "5",
    };

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["stime"] = new Date().getTime();
    result["index"] = param.index;
    result["counter"] = ++param.counter;

    return result;
}

module.exports = ApiManager;
