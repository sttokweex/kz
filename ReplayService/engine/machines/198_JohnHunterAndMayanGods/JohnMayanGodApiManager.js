var Util = require("../../../../utils/slot_utils")

function ApiManager() { }

ApiManager.prototype.InitApi = function (player, param) {
    var result = {
        def_s: '1,2,3,4,5,6,7,8,9,10,11,12,7,6,4',
        balance: '100,000.00',
        cfgs: '1',
        ver: '2',
        index: '1',
        balance_cash: '100,000.00',
        def_sb: '10,9,6,3,5',
        reel_set_size: '12',
        def_sa: '11,2,3,7,5',
        reel_set: '0',
        balance_bonus: '0.00',
        na: 's',
        scatters: '1~50,20,2,0,0~12,12,12,0,0~1,1,1,1,1',
        gmb: '0,0,0',
        rt: 'd',
        wl_i: 'tbm~10000',
        stime: '1646791727060',
        sa: '11,2,3,7,5',
        sb: '10,9,6,3,5',
        reel_set10: '5,7,7,7,10,12,6,12,12,12,7,11,6,6,6,1,11,11,11,4,9,8,8,8,8,3,6,12,7,12,8,12,8,3,8,11,12,6,7,8,12,11,7,8,7~12,8,11,8,8,8,2,10,9,9,9,1,3,6,6,6,4,9,5,6,7,7,7,7,9,8,7,1,11,6,2~11,12,4,2,10,3,9,1,7,5,6,8,10,10,10,7,7,7,8,8,8,12,10,8,5,7,8,12,8,12,2,8,3,7,3,8,2,4,2,8,5,8,7,6,8,10,8,6,1~5,8,8,8,3,10,1,9,12,4,8,6,7,2,11,12,12,12,6,6,6,7,7,7,12,10,2,10,4,10,8,7,8,10,8,7,6,11,10,4,10,12,6,2,12,4,12,7,8,2,7,6~9,1,10,3,4,12,5,6,7,8,7,7,7,11,10,10,10,8,8,8,11,11,11,10,11,4,11,10,11,10,8,11,6,11,8,11,8,4,1,12,7,11,12,1,3,11,12,1,7,1,7,10,11,8,10',
        sc: '20.00,30.00,40.00,50.00,100.00,200.00,300.00,400.00,500.00,750.00,1000.00,2000.00,3000.00,4000.00,5000.00,6000.00,7000.00,8000.00,9000.00,10000.00,12000.00,13000.00,14000.00,15000.00,18000.00,20000.00,22000.00,23000.00,25000.00',
        defc: '200.00',
        reel_set11: '5,7,7,7,10,12,6,12,12,12,7,11,6,6,6,1,11,11,11,4,9,8,8,8,8,3,6,12,7,12,8,12,8,3,8,11,12,6,7,8,12,11,7,8,7~12,8,11,8,8,8,2,10,9,9,9,1,3,6,6,6,4,9,5,6,7,7,7,7,9,8,7,1,11,6,2~11,12,4,2,10,3,9,1,7,5,6,8,10,10,10,7,7,7,8,8,8,12,10,8,5,7,8,12,8,12,2,8,3,7,3,8,2,4,2,8,5,8,7,6,8,10,8,6,1~5,8,8,8,3,10,1,9,12,4,8,6,7,2,11,12,12,12,6,6,6,7,7,7,12,10,2,10,4,10,8,7,8,10,8,7,6,11,10,4,10,12,6,2,12,4,12,7,8,2,7,6~9,1,10,3,4,12,5,6,7,8,7,7,7,11,10,10,10,8,8,8,11,11,11,10,11,4,11,10,11,10,8,11,6,11,8,11,8,4,1,12,7,11,12,1,3,11,12,1,7,1,7,10,11,8,10',
        sh: '3',
        wilds: '2~0,0,0,0,0~1,1,1,1,1',
        bonuses: '0',
        fsbonus: '',
        c: '200.00',
        sver: '5',
        counter: '2',
        paytable: '0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;500,250,100,0,0;400,200,50,0,0;300,125,20,0,0;250,100,20,0,0;200,50,10,0,0;200,50,10,0,0;100,20,5,0,0;100,20,5,0,0;100,20,5,0,0;100,20,5,0,0',
        l: '10',
        rtp: '96.71',
        reel_set0: '7,7,7,7,5,10,12,11,11,11,9,8,8,8,1,11,6,6,6,3,8,6,4,12,12,12,8,11,6,11,9,6,11,10,8~7,7,7,10,8,8,8,2,9,9,9,3,6,6,6,11,8,1,12,7,5,9,4,6,1,9,3,10,6,2,11,9,10,8,1,9,4,10,9,10,1,10,6,11,9~6,1,10,10,10,2,10,8,8,8,4,12,7,7,7,5,7,11,8,9,3,7,5,8,3,8,5,3,8,4,7,8,4,5,7,8,10,7,8,4~12,2,7,7,7,8,7,5,12,12,12,4,10,6,9,11,8,8,8,1,3,6,6,6,8,10,7,6,7,10,8,10,6,7,8,6,7~8,10,4,9,8,8,8,3,12,7,7,7,11,7,1,5,6,11,11,11,10,10,10,7,10,7,10,11,12,11,10,7,10,11,10,12,10,7,10,7',
        s: '1,2,3,4,5,6,7,8,9,10,11,12,7,6,4',
        accInit: '[{id:0,mask:\"cp;tp;lvl;sc;cl\"}]',
        reel_set2: '11,5,7,7,7,10,9,6,6,6,4,1,5,5,5,3,7,6,12,7,9,7,5~6,6,6,11,6,5,3,7,7,7,4,5,5,5,10,7,9,2,1,12,7,5,9,5,9,7,9,5,9,1,9,5,9,11,7,5,1,5,4,7~1,2,11,6,6,6,6,12,7,5,4,3,10,9,5,5,5,7,7,7,5,7,2~5,5,5,2,11,6,3,5,6,6,6,10,7,12,4,7,7,7,1,9,6,1,7,1,12,7,10,12,7,6,1~10,4,7,7,7,3,5,12,5,5,5,9,6,6,6,1,7,11,6,1,7,4,7,1,7,11,9,7,6,7',
        reel_set1: '3,10,5,5,5,1,12,8,6,6,6,9,6,4,5,11,7,10,1,12,6,5,1~5,5,5,4,6,6,6,7,1,12,9,10,5,8,6,2,11,3,6,7,9~5,5,5,8,6,6,6,7,6,12,4,10,1,11,3,5,2,9,11,2,6,12,6,12,11,10,1,7,8,11,1,12,6,12,2,6~2,5,5,5,10,1,6,6,6,6,4,12,8,5,3,7,11,9,6~10,6,6,6,7,4,3,5,5,5,8,9,1,11,5,12,6,3,6,8,7,6,5,4,6',
        reel_set4: '3,4,9,5,5,5,10,11,5,12,1,11,11,11,4,1,11,4,10,11,10,5,10,11,10,4,11,4~4,1,5,5,5,11,3,12,5,11,11,11,9,2,10,5,3,5,1,5~10,3,12,5,11,4,5,5,5,9,2,1,11,11,11,12,11,4,5,3,9,12,3,12,4,5,11,4,5,11,5,12,5,4,5,3,2,5,12,5,2~11,1,5,5,5,10,4,12,11,11,11,2,5,3,9,5,10,5,12,10,5,12,10,4,5,9,10,1,5,12,10,5,1,5,10,3,5,2,3~11,11,11,12,3,5,1,5,5,5,4,10,9,11,9,5,12,5,1,5,4,9,5,4,9,12,9,5,9',
        reel_set3: '11,10,3,5,5,5,1,12,5,6,6,6,4,6,9,5,10,9,10,5,6,4,10,5,6,9,3,6,4,5,10,5,6,10,4,6,5,6,4~3,2,6,6,6,10,5,5,5,11,5,1,9,4,12,6,12,11,9,5~5,5,5,4,12,1,6,5,11,6,6,6,3,10,2,9,11,4,2,12,2,4,11,9,11,1,4,11~5,5,5,10,2,6,6,6,6,11,4,5,9,12,1,3,4,11,6,2,10,6,11,6,10~6,6,6,1,3,6,5,5,5,4,10,9,5,12,11,9,5,11,1,4,11,4,11,5,4,9,4,5,4,5,12,11,5,9,11,9,1,10',
        reel_set6: '11,11,11,1,12,12,12,12,10,11,9,3,1,9,10,9,1,9,10,9,12,10~1,10,12,11,11,11,11,3,2,9,3,12,11,3,2,3,11~3,11,11,11,12,10,2,11,9,1,11,1,11,1,11,2,11,12,11,9,12,9,12,11,12,11,9,1,11~11,11,11,11,3,2,10,12,1,9,1,9,12,9,1,9,12,1,2,1,9,2,9,10,9,2~11,11,11,3,10,12,12,12,1,12,11,9,12,1,10,12',
        reel_set5: '10,11,9,1,11,11,11,12,4,4,4,3,12,12,12,4,12,4,11,4,12,4,11,4,12,1,4,12,11,4,1,4,11,9~12,4,4,4,4,1,11,11,11,9,2,11,10,3,11,4,11,4,1,11,10,2,4,2,4,11,3,11,2,3,4,3~4,9,2,10,11,11,11,11,12,1,4,4,4,3,12,3,2,3,2,11,9,11,3,12,10,11,12,2,12,10~3,10,11,11,11,12,1,4,4,4,9,4,11,2,11,1,11,1,2,1,9,2,9,11,2,11,1,11~3,12,12,12,12,9,11,4,11,11,11,1,10,4,4,4,12,11,4,11,4,11,4,12,4,12,11,12,11,4,12,11',
        reel_set8: '5,7,7,7,10,12,6,12,12,12,7,11,6,6,6,1,11,11,11,4,9,8,8,8,8,3,6,12,7,12,8,12,8,3,8,11,12,6,7,8,12,11,7,8,7~12,8,11,8,8,8,2,10,9,9,9,1,3,6,6,6,4,9,5,6,7,7,7,7,9,8,7,1,11,6,2~11,12,4,2,10,3,9,1,7,5,6,8,10,10,10,7,7,7,8,8,8,12,10,8,5,7,8,12,8,12,2,8,3,7,3,8,2,4,2,8,5,8,7,6,8,10,8,6,1~5,8,8,8,3,10,1,9,12,4,8,6,7,2,11,12,12,12,6,6,6,7,7,7,12,10,2,10,4,10,8,7,8,10,8,7,6,11,10,4,10,12,6,2,12,4,12,7,8,2,7,6~9,1,10,3,4,12,5,6,7,8,7,7,7,11,10,10,10,8,8,8,11,11,11,10,11,4,11,10,11,10,8,11,6,11,8,11,8,4,1,12,7,11,12,1,3,11,12,1,7,1,7,10,11,8,10',
        reel_set7: '5,7,7,7,10,12,6,12,12,12,7,11,6,6,6,1,11,11,11,4,9,8,8,8,8,3,6,12,7,12,8,12,8,3,8,11,12,6,7,8,12,11,7,8,7~12,8,11,8,8,8,2,10,9,9,9,1,3,6,6,6,4,9,5,6,7,7,7,7,9,8,7,1,11,6,2~11,12,4,2,10,3,9,1,7,5,6,8,10,10,10,7,7,7,8,8,8,12,10,8,5,7,8,12,8,12,2,8,3,7,3,8,2,4,2,8,5,8,7,6,8,10,8,6,1~5,8,8,8,3,10,1,9,12,4,8,6,7,2,11,12,12,12,6,6,6,7,7,7,12,10,2,10,4,10,8,7,8,10,8,7,6,11,10,4,10,12,6,2,12,4,12,7,8,2,7,6~9,1,10,3,4,12,5,6,7,8,7,7,7,11,10,10,10,8,8,8,11,11,11,10,11,4,11,10,11,10,8,11,6,11,8,11,8,4,1,12,7,11,12,1,3,11,12,1,7,1,7,10,11,8,10',
        reel_set9: '5,7,7,7,10,12,6,12,12,12,7,11,6,6,6,1,11,11,11,4,9,8,8,8,8,3,6,12,7,12,8,12,8,3,8,11,12,6,7,8,12,11,7,8,7~12,8,11,8,8,8,2,10,9,9,9,1,3,6,6,6,4,9,5,6,7,7,7,7,9,8,7,1,11,6,2~11,12,4,2,10,3,9,1,7,5,6,8,10,10,10,7,7,7,8,8,8,12,10,8,5,7,8,12,8,12,2,8,3,7,3,8,2,4,2,8,5,8,7,6,8,10,8,6,1~5,8,8,8,3,10,1,9,12,4,8,6,7,2,11,12,12,12,6,6,6,7,7,7,12,10,2,10,4,10,8,7,8,10,8,7,6,11,10,4,10,12,6,2,12,4,12,7,8,2,7,6~9,1,10,3,4,12,5,6,7,8,7,7,7,11,10,10,10,8,8,8,11,11,11,10,11,4,11,10,11,10,8,11,6,11,8,11,8,4,1,12,7,11,12,1,3,11,12,1,7,1,7,10,11,8,10',
    };

    // API          
    result["stime"] = new Date().getTime();

    //              api            
    if (player.lastPattern) {
        for (var key in player.lastPattern) {
            result[key] = player.lastPattern[key];
        }
    }

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["index"] = param.index;
    result["counter"] = ++param.counter;

    if (player.betPerLine > 0) {
        result["c"] = player.betPerLine;
        result["defc"] = player.betPerLine;
    }
    return result;
};

ApiManager.prototype.GameApi = function (player, prevGameMode, param) {
    var result = {
        tw: player.machine.winMoney,
        balance: 0,
        index: 1,  
        balance_cash: 0,
        balance_bonus: 0,
        na: "s",
        reel_set: 0,    //                              
        stime: new Date().getTime(),
        sa: "",
        sb: "",
        sh: 3,
        sver: 5,   
        c: player.betPerLine,
        counter: 1,
        l: 10,
        w: player.machine.winMoney,
        s: Util.view2String(player.machine.view)
    };

    //          ,                          
    var screenAbove = Util.view2String(player.machine.virtualReels.above);
    var screenBelow = Util.view2String(player.machine.virtualReels.below);
    result["sa"] = screenAbove;
    result["sb"] = screenBelow;
    //                                 
    var winLines = player.machine.winLines;
    for (var i = 0; i < winLines.length; i++) {
        result[`l${i}`] = winLines[i];
    }
    //                                           
    var nextAction = "s";
    if (player.machine.winMoney > 0) {
        nextAction = "c";
    }
    result["na"] = nextAction;
    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;

    if (player.machine.maskView.length > 0) {
        result["ep"] = `2~${player.machine.wildPosArr.join()}~${player.machine.wildExtendPosArr.join()}`;
        result["is"] = player.machine.maskView.join();
    }

    if (prevGameMode == "BASE") {
        if (player.machine.currentGame == "FREE") {
            //                                   ,                    
            result["fs"] = 1;
            result["fsmax"] = player.machine.freeSpinLength;
            result["fsmul"] = 1;
            result["fsres"] = 0.00;
            result["fswin"] = 0.00;
            result["psym"] = `1~${player.machine.scatterWin}~${player.machine.scatterPositions.join()}`;
            result["na"] = "s";
        }
    } else if (prevGameMode == "FREE") {
        //                       
        result["reel_set"] = 1;
        result["acci"] = "0";

        if (!player.machine.isFreeSpinAdd) {
            result["accm"] = "cp~tp~lvl~sc";
            result["accv"] = `0~1~${player.machine.freeSpinLevel + 1}~0`;
        } else {
            result["accm"] = "cp~tp~lvl~sc~cl";
            result["accv"] = `0~1~${player.machine.freeSpinLevel + 1}~${player.machine.wildCount}~${player.machine.freeSpinLevel - player.machine.wildCount + 1}`;
            result["fsmore"] = player.machine.wildCount * 2 - 1;
        }

        if (player.machine.currentGame == "FREE") {
            result["na"] = "s";
            result["fs"] = player.machine.freeSpinIndex;
            result["fsmax"] = player.machine.freeSpinLength;
            result["fsmul"] = 1;
            result["fswin"] = player.machine.freeSpinWinMoney;
            result["fsres"] = player.machine.freeSpinWinMoney;
            result["tw"] = player.machine.freeSpinWinMoney + player.machine.scatterWin;
        }
        else if (player.machine.currentGame == "BASE") {
            //                                     ->                       
            result["na"] = "c";
            result["fs_total"] = player.machine.freeSpinLength;
            result["fsmul_total"] = 1;
            result["fsend_total"] = 1;
            result["fswin_total"] = player.machine.freeSpinWinMoney - player.machine.scatterWin;
            result["fsres_total"] = player.machine.freeSpinWinMoney - player.machine.scatterWin;
            result["tw"] = player.machine.freeSpinWinMoney;
        }
    }

    result["index"] = param.index;
    result["counter"] = ++param.counter;
    return result;
}

ApiManager.prototype.CollectApi = function (player, param) {
    var result = {
        balance: player.balance,
        index: param.index,
        balance_cash: player.balance,
        balance_bonus: "0.0",
        na: "s",
        stime: new Date().getTime(),
        sver: "5",
        counter: ++param.counter
    };

    return result;
}

module.exports = ApiManager;
