var Util = require("../../../../utils/slot_utils");

function ApiManager() { }

ApiManager.prototype.InitApi = function (player, param) {
    var result = {
        def_s: "12,6,9,9,7,9,8,7,12,12,6,7,12,7,8",
        balance: "100,000.00",
        cfgs: "1",
        ver: "2",
        index: "1",
        balance_cash: "100,000.00",
        reel_set_size: "4",
        def_sb: "11,11,10,11,3",
        def_sa: "7,12,11,5,10",
        reel_set: "0",
        prg_cfg_m: "s0,cp0,tp0,s1,cp1,tp1",
        balance_bonus: "0.00",
        na: "s",
        scatters: "1~0,0,0,0,0~0,0,0,0,0~1,1,1,1,1",
        gmb: "0,0,0",
        rt: "d",
        stime: "1647478765133",
        sa: "7,12,11,5,10",
        sb: "11,11,10,11,3",
        sc: "10.00,20.00,30.00,40.00,50.00,60.00,70.00,80.00,90.00,100.00,110.00,120.00,130.00,140.00,150.00,160.00,170.00,180.00,190.00,200.00,240.00,300.00,400.00,500.00,700.00,800.00,1000.00,1500.00,2000.00,3000.00,5000.00",
        defc: "100.00",
        prg_cfg: "13,3,0,14,3,0",
        sh: "3",
        wilds: "2~1000,200,75,0,0~1,1,1,1,1;13~0,0,0,0,0~1,1,1,1,1;14~0,0,0,0,0~1,1,1,1,1",
        bonuses: "0",
        fsbonus: "",
        c: "100.00",
        sver: "5",
        counter: "2",
        paytable: "0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;1000,200,75,0,0;400,100,40,0,0;250,75,30,0,0;200,60,25,0,0;150,40,20,0,0;125,30,15,0,0;100,25,10,0,0;75,20,7,0,0;50,15,5,0,0;40,10,3,0,0;0,0,0,0,0;0,0,0,0,0",
        l: "20",
        rtp: "96.23",
        reel_set0: "3,10,11,7,12,9,6,11,12,7,10,8,12,11,7,12,9,10,7,9,11,5,12,8,7,10,11,6,9,10,5,9,12,3,10,11,5,8,9,7,10,11,7,10,9,6,10,12,7,10,8,3,11,10,6,9,10,7,9,10,5,12,8,7,10,11,6,9,12,5,9,10,4,10,12,13,11,8,5,10,8,7,12,9,6,11,12,7,10,8,3,10,8,6,9,10,7,9,11,5,12,8,7,10,8,6,9,8,5,9,12,7,8,10,5,9,8,6,10,11,4,8,9,6,11,12,7,10,8,7,11,8,6,9,10,7,9,11,5,12,8,7,10,11,6,9,8,5,9,8,6,9,8,5,10,12,7,10,11,4,12,9,6,11,12,7,10,8,3,11,8,6,9,10,7,9,8,5,12,8,7,10,11,6,9,8,5,9,12,6,11,9,13,10,8,7,10,8,4,12,9,6,10,12,7,10,8,7,10,8,6,9,10,7,9,11,5,12,8,7,10,11,6,9,8,5,9,12,7,10,11,6,8,12,7,10,8,4,12,9,6,11,12,7,10,8,3,11,8,6,9,10,7,9,11,5,12,8,7,10,11,6,9,8,7,9,12,4,11,8,6,12,8,4,10,11,4,12,9,6,11,12,7,10,8,3,11,8,6,9,10,7,9,11,5,12,8,7,10,11,6,9,8,5,9,12,7,8,10,5,9,12,10,11,4,12,8,6,11,12,7,10,8,7,11,8,7,10,8,3,11,8,6,9,10,7,9,11,5,12,8,7,10,11,6,9,8,5,9,12,7,8,10,5~3,10,11,4,12,8,5,7,12,6,8,7,11,2,9,6,10,12,5,8,12,4,11,9,3,10,8,6,12,7,8,11,4,12,10,6,9,2,6,10,9,4,11,9,5,11,10,6,12,9,6,12,4,11,2,12,7,11,12,3,10,11,5,8,11,7,12,9,6,10,11~4,11,10,5,12,8,7,9,5,8,2,10,7,11,9,7,12,10,5,8,11,3,12,9,7,11,12,7,11,10,5,12,6,4,12,9,2,12,6,11,9,5,8,11,3,10,9,7,8,2,5,11,12,7,10,12,4,9,7,11,6,8,12,3,10,8,4,9,11,6,12,7,11,5,8,6,12,9~5,12,11,6,12,10,7,11,8,4,12,9,6,11,10,7,12,11,5,9,12,7,11,10,6,8,12,3,11,10,7,12,9,6,10,11,4,8,12,7,9,11,5,12,10,6,12,8,7,9,2,10,5,11,7,12,9,3,11,8,6,10,12,4,11~3,12,10,6,9,8,7,10,11,5,8,12,6,10,9,4,11,12,7,9,12,5,11,10,7,12,8,3,9,10,6,11,9,6,8,10,7,9,12,6,10,11,5,8,11,4,12,10,6,9,8,7,10,11,6,8,12,6,10,9,4,11,12,3,9,12,5,11,10,7,12,8,3,9,10,7,12,9,6,8,11,7,9,12,6,10,11,5,8,11,4,10,11,14,12,8,6,9,12,10,6,9,8,7,10,11,5,8,12,6,10,9,4,11,12,7,9,12,5,11,10,7,12,8,3,9,10,7,11,9,6,8,11,7,9,12,6,10,11,5,7,11,4,12,10,6,9,8,7,10,11,5,8,12,6,10,9,4,11,12,7,9,12,5,11,10,7,12,8,3,9,10,7,11,9,6,8,11,7,9,12,6,10,11,5,8,11,4,12,10,4,8,9,5,12,10,6,9,8,7,10,11,5,8,12,6,10,9,6,11,12,7,6,12,5,11,10,7,12,8,3,9,10,7,11,9,6,8,11,7,9,12,6,10,11,5,8,11,4,12,10,6,9,8,7,10,11,5,8,12,6,10,9,4,11,12,7,9,12,5,11,10,7,12,8,3,6,10,7,11,9,6,8,11,7,9,12,6,10,11,5,8,11,4,12,10,6,9,8,7,10,11,5,8,12,6,10,9,6,11,12,7,6,12,5,11,10,7,12,8,3,9,10,7,11,9,6,8,11,7,9,12,6,10,11,5,8,11,4,12,10,6,9,8,7,10,11,5,8,12,6,10,9,4,11,12,7,9,12,5,11,10,7,12,8,3,9,10,7,11,9,6,8,11,7,9,12,6,10,11,5,8,11,4,12,10,6,9,8,14,10,7,5,8,12,6,10,9,4,10,12,7,9,12,5,11,10,7,12,8,3,9,10,7,11,9,6,8,11,7,9,12,6,10,11,5,8,11,4,12,10,6,9,8,7,10,11,5,7,12,6,8,9,4,10,12,7,9,12,5,11,8,7,12,8,3,9,10,7,11,9,6,8,11,7,9,12,6,10,10,5,8,11,4,12,8,6,10,12,6,9,8,3,9,10,7,11,9,6,8,11,7,9,12,6,10,10,5,8,11,4,12,8,6,10,12,6,8,9,4",
        s: "12,6,9,9,7,9,8,7,12,12,6,7,12,7,8",
        reel_set2: "7,10,3,8,11,5,13,4,12,6,9,8,10,5,13,11,8,9,4,12,7,10,13,11,8,9,6,11,8,7,12,3,10,13,8,6,10,12,5,9,8,11,7,10,6,8,13,12,7,9,11,4,10,8,12,9,6,11,8,12,3,10,8,4,11,7,9,12,5,10,11,6,8,13,9,11,8,10,7,9,11,10,5,12,8,11,6,12,9,10,7,11,10,4~3,10,11,4,12,8,5,9,12,6,8,7,11,9,6,10,12,5,8,12,4,11,9,3,10,8,6,12,7,11,4,10,6,12,8,7,12,6,10,9,4,11,12,5,11,10,6,12,9,6,12,4,11,12,7,11,9,3,10,12,5,8,11,7,12,9,6,10,11,7~4,11,10,5,12,8,7,9,5,8,10,6,11,9,7,12,10,5,8,11,3,12,9,7,11,12,7,11,10,5,8,4,9,12,6,11,9,7,12,5,8,11,3,10,9,6,12,7,8,11,5,10,7,12,4,9,7,11,6,8,12,3,10,8,4,9,11,6,12,7,11,5,8,6,12~5,12,11,6,12,10,7,11,8,4,12,9,6,11,10,7,12,11,5,9,12,7,11,10,6,8,12,3,11,10,7,12,9,6,10,11,4,8,12,7,9,11,5,12,10,6,12,8,7,9,10,5,11,7,12,9,3,11,8,6,10,12,4,11,10~7,10,5,8,11,3,14,4,12,6,9,8,10,5,14,11,8,9,4,12,7,10,14,11,8,9,6,10,8,7,12,3,11,14,10,6,8,12,5,9,8,11,7,10,6,8,14,12,7,9,11,4,10,8,10,9,6,11,9,12,3,10,8,14,11,7,9,12,5,10,11,6,8,12,14,11,8,10,7,9,14,12,5,11,8,10,6,12,9",
        reel_set1: "3,10,11,7,12,9,6,11,12,7,10,8,12,11,7,12,9,10,7,9,11,5,12,8,7,10,11,6,9,10,5,9,12,3,10,11,5,8,9,7,10,11,7,10,9,6,10,12,7,10,8,3,11,10,6,9,10,7,9,10,5,12,8,7,10,11,6,9,12,5,9,10,4,10,12,13,11,8,5,10,8,7,12,9,6,11,12,7,10,8,3,10,8,6,9,10,7,9,11,5,12,8,7,10,8,6,9,8,5,9,12,7,8,10,5,9,8,6,10,11,4,8,9,6,11,12,7,10,8,7,11,8,6,9,10,7,9,11,5,12,8,7,10,11,6,9,8,5,9,8,6,9,8,5,10,12,7,10,11,4,12,9,6,11,12,7,10,8,3,11,8,6,9,10,7,9,8,5,12,8,7,10,11,6,9,8,5,9,12,6,11,9,13,10,8,7,10,8,4,12,9,6,10,12,7,10,8,7,10,8,6,9,10,7,9,11,5,12,8,7,10,11,6,9,8,5,9,12,7,10,11,6,8,12,7,10,8,4,12,9,6,11,12,7,10,8,3,11,8,6,9,10,7,9,11,5,12,8,7,10,11,6,9,8,7,9,12,4,11,8,6,12,8,4,10,11,4,12,9,6,11,12,7,10,8,3,11,8,6,9,10,7,9,11,5,12,8,7,10,11,6,9,8,5,9,12,7,8,10,5,9,12,10,11,4,12,8,6,11,12,7,10,8,7,11,8,7,10,8,3,11,8,6,9,10,7,9,11,5,12,8,7,10,11,6,9,8,5,9,12,7,8,10,5~3,10,11,4,12,8,5,7,12,6,8,7,11,2,9,6,10,12,5,8,12,4,11,9,3,10,8,6,12,7,8,11,4,12,10,6,9,2,6,10,9,4,11,9,5,11,10,6,12,9,6,12,4,11,2,12,7,11,12,3,10,11,5,8,11,7,12,9,6,10,11~4,11,10,5,12,8,7,9,5,8,2,10,7,11,9,7,12,10,5,8,11,3,12,9,7,11,12,7,11,10,5,12,6,4,12,9,2,12,6,11,9,5,8,11,3,10,9,7,8,2,5,11,12,7,10,12,4,9,7,11,6,8,12,3,10,8,4,9,11,6,12,7,11,5,8,6,12,9~5,12,11,6,12,10,7,11,8,4,12,9,6,11,10,7,12,11,5,9,12,7,11,10,6,8,12,3,11,10,7,12,9,6,10,11,4,8,12,7,9,11,5,12,10,6,12,8,7,9,2,10,5,11,7,12,9,3,11,8,6,10,12,4,11~3,11,10,7,8,5,12,14,7,11,10,4,12,9,6,11,12,14,3,11,12,7,10,11,3,10,12,6,14,10,7,9,11,7,8,14,4,8,10,6,9,10,5,9,10,7,8,12,14,7,9,7,10,14,3,12,4,11,6,14,8,4,12,9,5,10,11,6,14,10,9,3,4,10,7,14,12,4,8,11,5,9,14,7,12,10,6,14,8,3,12,14,11,5,10,11,9,6,12,8,6,14,8,4,12,9,7,8,11,3,10,14,9,5,8,14,6,12,9,7,11,14,7,10,9,3,12,14,6,11,5,8,4,12,14,5,9,11,10,8,6,12,9,7,14,11,10,7,12,9,6,8,12,10,4,14,11,8,5,9,12,10,6,9,11,3,8,9,7,14,11,8,5,12,9,7,10,8,6,11,9,4,12,9,7,14,8,6,10,11,8,5,9,11,7,10,14,8,4,10,8,6,11,9,12,5,8,11,14,3,12,9,7,11,9,5,10,8,7,9,11,6,12,10,4,14,11,8,5,10,12,9,6,14,8,4,12,10,7,11,14,5,12,11,9,3,10,14,7,12,10,6,9,11,14,7,8,5,14,10,3,11,9,5,12,8,4,14,9,6,10,11,7,12,8",
        reel_set3: "3,12,3,11,10,12,7,8,12,10,11,12,7,8,12,11,9,12,7,10,11,12,8,11,12,10,11,12,6,9,8,5,12,10,7,11,12,6,8,10,4,12,9,5,10,12,8,6,12,8,9,10,12,11,6,12,8,5,12,10,7,11,12,7,10,8,6,12,9,11,10,12,5,10,11,7,12,9,11~12,8,9,6,12,11,9,12,11,9,7,8,12,11,10,12,6,11,12,3,9,11,7,12,8,5,12,11,9,12,11,10,6,12,11,5,12,9,7,11,12,9,11,12,7,11,12,9,11,12,8,11,6,9,11,5,12,9,7,12,10,11,12,9,11,12,6,9,12,7,8,12,5,11,9,7,12,10,4,9,11,7,12,11,9,6,12,11,7,12,10,4~12,7,8,12,11,5,12,11,6,12,11,5,12,10,11,12,5,9,12,7,8,12,4,10,11,6,10,11,12,10,11,12,8,11,12,10,11,12,6,11,12,5,9,11,12,4,11,8,12,11,10,12,11,8,12,11,7,12,9,6,12,11,10,12,11,8,12,9,7,11,12,3,11,8,12,6,10,12,8,5,9,12,10,7,12,8,9,11,12,10,8,7,12,10,6~11,8,9,11,6,12,11,9,12,11,7,8,11,5,10,11,6,12,11,3,9,11,7,9,11,5,8,12,11,9,12,11,6,10,11,5,9,11,7,12,11,4,9,11,8,7,9,11,4,12,11,8,6,11,9,5,11,9,7,11,10,12,11,9,12,11,6,9,11,7,8,11,5,12,9,7,11,10,12,9,11,7,12,11,9,6,12,11,7,10,11,12,9~7,12,8,5,10,12,11,3,8,3,10,12,7,8,12,5,9,12,7,10,12,5,8,11,12,10,11,12,6,9,8,5,12,10,7,11,12,6,8,10,4,12,9,5,10,12,8,6,12,11,9,10,12,11,6,12,8,5,12,10,7,11,12,7,10,8,6,12,9,11,10,12,5,10,11,7,12,9,11",
    };

    //              api            
    if (player.lastPattern) {
        for (var key in player.lastPattern) {
            result[key] = player.lastPattern[key];
        }
    }

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["index"] = param.index;
    result["counter"] = ++param.counter;

    if (player.betPerLine > 0) {
        result["c"] = player.betPerLine;
        result["defc"] = player.betPerLine;
    }
    return result;
};

ApiManager.prototype.GameApi = function (player, prevGameMode, param) {
    var result = {
        tw: player.machine.winMoney,
        balance: "100,116.81",
        index: "10",
        balance_cash: "100,116.81",
        balance_bonus: "0.00",
        na: "s",
        stime: new Date().getTime(),
        sa: "11,9,6,9,4",
        sb: "7,3,9,8,10",
        sh: "3",
        c: player.betPerLine,
        sver: "5",
        counter: "20",
        l: "20",
        w: player.machine.winMoney,
        s: Util.view2String(player.machine.view),
    };

    //          ,                          
    var screenAbove = Util.view2String(player.machine.virtualReels.above);
    var screenBelow = Util.view2String(player.machine.virtualReels.below);
    result["sa"] = screenAbove;
    result["sb"] = screenBelow;
    //                                 
    var winLines = player.machine.winLines;
    for (var i = 0; i < winLines.length; i++) {
        result[`l${i}`] = winLines[i];
    }
    result["index"] = param.index;
    result["counter"] = ++param.counter;
    //                                           
    var nextAction = "s";
    if (player.machine.winMoney > 0) {
        nextAction = "c";
    }
    result["na"] = nextAction;
    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;

    //                       
    if (player.machine.rwd != "") {
        result["is"] = player.machine.isView.join();
        result["rwd"] = player.machine.rwd;
    }

    if (prevGameMode == "BASE") {
        //                                   ,                    
        if (player.machine.currentGame == "FREE") {
            result["prg_m"] = "s0,cp0,tp0,s1,cp1,tp1";
            result["prg"] = "13,3,0,14,3,0";
            result["rs_c"] = 1;
            result["rs_m"] = 1;
            result["rs_p"] = "0";
            result["rs"] = "mc";
            result["na"] = "s";
        }
    } //                       
    else if (prevGameMode == "FREE") {
        result["tw"] = player.machine.freeSpinWinMoney;
        if (player.machine.currentGame == "FREE") {
            if (player.machine.winMethod == "aladdin" || player.machine.winMethod == "sorcer") {
                result["prg_m"] = "s0,cp0,tp0,s1,cp1,tp1";
                result["prg"] = player.machine.fightState.join();
                result["rs_more"] = 1;
                if (player.machine.freeRwd.length > 0) {
                    result["rwd"] = `2~${player.machine.freeRwd.join()}`;
                }
            }

            result["rs_c"] = player.machine.freeSpinIndex + 1;
            result["rs_m"] = player.machine.freeSpinIndex + 1;
            result["rs_p"] = player.machine.freeSpinIndex;
            result["rs_win"] = player.machine.freeSpinWinMoney;
            result["w"] = player.machine.winMoney;
            result["na"] = "s";
            result["rs"] = "mc";
            result["reel_set"] = 2;

            if (player.machine.isView.length > 0) {
                result["is"] = player.machine.isView.join();
            }

            if (player.machine.bonusIndex == 1 && player.machine.isEndFight) {
                result["prg_m"] = "s0,cp0,tp0,s1,cp1,tp1";
                result["prg"] = player.machine.fightState.join();
                result["rwd"] = `2~${player.machine.freeRwd.join()}`;

                result["rs_c"] = player.machine.freeSpinIndex + 1;
                result["rs_m"] = player.machine.freeSpinIndex + 3;
                result["rs_p"] = player.machine.freeSpinIndex;
                result["rs_more"] = 3;
                result["sty"] = player.machine.styWildPos.join("~");
                bonusLen = player.machine.freeSpinIndex + 3;
            }

            if ((player.machine.winMethod == "aladdinBonus" && player.machine.isEndFight) && player.machine.bonusIndex != 1) {
                result["rs_c"] = player.machine.freeSpinIndex + 1;
                result["rs_m"] = player.machine.freeSpinIndex + 3 - 1;
                result["rs_p"] = player.machine.freeSpinIndex;
                if (player.machine.freeSpinIndex + 2 == bonusLen) {
                    result["sty"] = player.machine.styWildPos.join("~");
                } else {
                    if (player.machine.slm_lmi.length > 0) {
                        result["slm_lmi"] = player.machine.slm_lmi.join();
                        result["slm_lmv"] = player.machine.slm_lmv.join();
                    }

                    result["slm_mp"] = player.machine.freeRwd.join();
                    result["slm_mv"] = player.machine.multiPosition.join();
                    result["sty"] = player.machine.styWildPos.join("~");
                }
            }
        } //                                     ->                       
        else if (player.machine.currentGame == "BASE") {
            if (player.machine.winMethod == "sorcer") {
                result["prg_m"] = "s0,cp0,tp0,s1,cp1,tp1";
                result["prg"] = player.machine.fightState.join();

                if (player.machine.freeRwd.length > 0) {
                    result["is"] = player.machine.isView.join();
                    result["rwd"] = `2~${player.machine.freeRwd.join()}`;
                }

                result["rs_t"] = player.machine.freeSpinIndex;
                result["rs_win"] = player.machine.freeSpinWinMoney;
                result["na"] = "c";
            } else if (player.machine.winMethod == "aladdinBonus") {
                result["reel_set"] = 3;

                result["slm_lmi"] = player.machine.slm_lmi.join();
                result["slm_lmv"] = player.machine.slm_lmv.join();

                result["slm_mp"] = player.machine.freeRwd.join();
                result["slm_mv"] = player.machine.multiPosition.join();

                result["sty"] = player.machine.styWildPos.join("~");

                result["rs_t"] = player.machine.freeSpinIndex;
                result["rs_win"] = player.machine.freeSpinWinMoney;
                result["na"] = "c";
            }
        }
    }



    return result;
};

ApiManager.prototype.CollectApi = function (player, param) {
    var result = {
        balance: "100,000.00",
        index: "3",
        balance_cash: "100,000.00",
        balance_bonus: "0.0",
        na: "s",
        stime: "1629939208592",
        sver: "5",
        counter: "2",
    };

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["stime"] = new Date().getTime();
    result["index"] = param.index;
    result["counter"] = ++param.counter;

    return result;
};

module.exports = ApiManager;