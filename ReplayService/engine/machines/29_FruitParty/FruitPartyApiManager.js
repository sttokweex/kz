var Util = require("../../../../utils/slot_utils")

function ApiManager() { }

ApiManager.prototype.InitApi = function (player, param) {
    var result = {
        balance_bonus: "0.00",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        bonuses: "0",
        c: "100.00",
        cfgs: "1",
        counter: "2",
        def_s: "5,9,3,7,7,9,9,9,3,6,6,5,6,9,9,3,7,7,9,9,3,3,6,6,5,6,4,3,3,7,7,9,9,4,6,6,6,5,6,4,5,7,7,7,9,9,4,3,6",
        def_sa: "4,9,3,6,6,5,5",
        def_sb: "6,5,6,4,5,9,7",
        defc: "100.00",
        fsbonus: "",
        gameInfo: `{props:{max_rnd_sim:"1",max_rnd_hr:"88817",max_rnd_win:"5000"}}`,
        gmb: "0,0,0",
        index: "1",
        l: "20",
        na: "s",
        paytable: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,1400,700,300,150,100,50,40,35,30,20,0,0,0,0;2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,1200,600,250,120,80,40,30,25,20,15,0,0,0,0;1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1000,500,200,90,60,30,25,20,15,10,0,0,0,0;1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,800,400,100,60,40,25,20,15,10,8,0,0,0,0;1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,600,300,70,50,30,20,15,10,8,6,0,0,0,0;800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,400,200,60,40,25,15,10,8,6,5,0,0,0,0;400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,200,100,50,30,20,10,8,6,5,4,0,0,0,0",
        purInit: `[{type:"fs",bet:2000,fs_count:10}]`,
        reel_set_size: 5,
        reel_set: 0,
        reel_set0: "9,9,3,3,6,7,6,7,5,1,6,9,4,4,5,3,9,8,8,4,6,9,9,5,5,8,8,7,7,9,6,8,7,5,5,9,8,7,9,6,4,6,9,8,7,6,6,9,9,8,6,9,8,9,4,9,9,7,6,9,9,8,3,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,8,4,5,3,7,8,8,7,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,8,9,8,8,4,7,9,7,6,9,9,8,5,3,7,7,8,6,9,7,6,8,5,5,4,5,3,7,7,8,4,5,7,4,8,8,6,6,6~9,9,3,3,6,7,6,7,5,9,6,9,4,4,5,3,1,8,8,4,6,9,9,5,5,8,8,7,7,9,6,8,7,5,5,9,8,7,9,6,4,6,9,8,7,6,6,9,9,8,6,9,8,9,4,9,9,7,6,9,9,8,3,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,8,4,5,3,7,8,8,7,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,8,9,8,8,4,7,9,7,6,9,9,8,5,3,7,7,8,6,9,7,6,8,5,5,4,5,3,7,7,8,4,5,7,4,8,8,6,6,6~9,9,3,3,6,7,6,7,5,9,6,9,4,4,5,3,9,1,8,4,6,9,9,5,5,8,8,7,7,9,6,8,7,5,5,9,8,7,9,6,4,6,9,8,7,6,6,9,9,8,6,9,8,9,4,9,9,7,6,9,9,8,3,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,8,4,5,3,7,8,8,7,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,8,3,3,8,9,8,8,4,7,9,7,6,9,9,8,5,3,7,7,8,6,9,7,6,8,5,5,4,5,3,7,7,8,4,5,7,4,8,8,6,6,6~9,9,3,3,6,7,6,7,5,9,6,9,4,4,5,3,9,8,8,4,6,9,1,5,5,8,8,7,7,9,6,8,7,5,5,9,8,7,9,6,4,6,9,8,7,6,6,9,9,8,6,9,8,9,4,9,9,7,6,9,9,8,3,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,8,4,5,3,7,8,8,7,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,8,9,8,8,4,7,9,7,6,9,9,8,5,3,7,7,8,6,9,7,6,8,5,5,4,5,3,7,7,8,4,5,7,4,8,8,6,6,6~9,9,3,3,6,7,6,7,5,9,6,9,4,4,5,3,1,8,8,4,6,9,9,5,5,8,8,7,7,9,6,8,7,5,5,9,8,7,9,6,4,6,9,8,7,6,6,9,9,8,6,9,8,9,4,9,9,7,6,9,9,8,3,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,8,4,5,3,7,8,8,7,8,4,5,7,1,8,8,5,4,4,3,9,9,7,8,9,3,3,8,9,8,8,4,7,9,7,6,9,9,8,5,3,7,7,8,6,9,7,6,8,5,5,4,5,3,7,7,8,4,5,7,4,8,8~9,9,3,3,6,7,6,7,5,9,6,9,4,4,5,3,9,8,8,1,6,9,9,5,5,8,8,7,7,9,6,8,7,5,5,9,8,7,9,6,4,6,9,8,7,6,6,9,9,8,6,9,8,9,4,9,9,7,6,9,9,8,3,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,8,4,5,3,7,8,8,7,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,8,9,8,8,4,7,9,7,6,9,9,8,5,3,7,7,8,6,9,7,6,8,5,5,4,5,3,7,7,8,4,5,7,4,8,8~9,9,3,3,6,7,6,7,5,9,5,9,4,4,5,3,1,8,8,4,6,9,9,5,5,8,8,7,7,9,6,8,7,5,5,9,8,7,9,6,4,6,9,8,7,6,6,9,9,8,6,9,8,9,4,9,9,7,6,9,9,8,3,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,8,4,5,3,7,8,8,7,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,8,9,8,8,4,7,9,7,6,9,9,8,5,3,7,7,8,6,9,7,6,8,5,5,4,5,3,7,7,8,4,5,7,4,8,8",
        reel_set1: "9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,9,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,4,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,9,8,8,4,7,7,7,6,9,9,8,3,7,7,8,6,6,9,7,6,5,5,5,7,6,6,6,8,4,4,4~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,9,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,4,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,9,8,8,4,7,7,7,6,9,9,8,3,7,7,8,6,6,9,7,6,5,5,5,7,6,6,6,8,4,4,4~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,9,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,4,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,9,8,8,4,7,7,7,6,9,9,8,3,7,7,8,6,6,9,7,6,5,5,5,7,6,6,6,8,4,4,4~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,9,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,4,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,9,8,8,4,7,7,7,6,9,9,8,3,7,7,8,6,6,9,7,6,5,5,5,7,6,6,6,8,4,4,4~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,9,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,5,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,9,8,8,4,7,7,7,6,9,9,8,3,7,7,8,6,6,9,7,6,5,5,5,7,6,6,6,8,4,4,4~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,9,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,5,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,3,8,8,4,7,7,7,6,9,9,8,3,7,7,8,6,6,9,7,6,5,5,5,7,6,6,6,8,4,4,4~9,9,3,3,6,7,6,7,5,9,5,6,9,4,3,3,9,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,5,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,3,8,8,4,7,7,7,6,9,9,8,3,7,7,8,6,6,9,7,6,5,5,5,7,6,6,6,8,4,4,4",
        reel_set2: "3,7,6,5,8,9,4,5,6,8,4,3,7,9,3,7,8,5,6,9,4,5,6,8,7,3,4,9,3,7,6,5,8,9,4,5,6,8,4,3,7,9,3,7~3,7,6,5,8,9,4,5,6,8,4,3,7,9,3,7,8,5,6,9,4,5,6,8,7,3,4,9,3,7,6,5,8,9,4,5,6,8,4,3,7,9,3,7~3,7,6,5,8,9,4,5,6,8,4,3,7,9,3,7,8,5,6,9,4,5,6,8,7,3,4,9,3,7,6,5,8,9,4,5,6,8,4,3,7,9,3,7~3,7,6,5,8,9,4,5,6,8,4,3,7,9,3,7,8,5,6,9,4,5,6,8,7,3,4,9,3,7,6,5,8,9,4,5,6,8,4,3,7,9,3,7~3,7,6,5,8,9,4,5,6,8,4,3,7,9,3,7,8,5,6,9,4,5,6,8,7,3,4,9,3,7,6,5,8,9,4,5,6,8,4,3,7,9,3,7~3,7,6,5,8,9,4,5,6,8,4,3,7,9,3,7,8,5,6,9,4,5,6,8,7,3,4,9,3,7,6,5,8,9,4,5,6,8,4,3,7,9,3,7~3,7,6,5,8,9,4,5,6,8,4,3,7,9,3,7,8,5,6,9,4,5,6,8,7,3,4,9,3,7,6,5,8,9,4,5,6,8,4,3,7,9,3,7",
        reel_set3: "9,9,3,3,6,7,6,7,5,1,6,6,9,4,3,3,9,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,4,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,9,8,8,4,7,7,7,6,9,9,8,5,3,7,7,8,6,9,7,6,5,5,5,7,6,6,6~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,1,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,4,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,9,8,8,4,7,7,7,6,9,9,8,5,3,7,7,8,6,9,7,6,5,5,5,7,6,6,6~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,9,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,4,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,1,3,3,3,9,8,8,4,7,7,7,6,9,9,8,5,3,7,7,8,6,9,7,6,5,5,5,7,6,6,6~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,9,8,8,4,6,9,1,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,4,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,9,8,8,4,7,7,7,6,9,9,8,5,3,7,7,8,6,9,7,6,5,5,5,7,6,6,6~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,1,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,5,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,9,8,8,4,7,7,7,6,9,9,8,5,3,7,7,8,6,9,7,6,5,5,5,7,6,6,6,5,4,4,4~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,9,8,8,1,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,5,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,3,8,8,4,7,7,7,6,9,9,8,5,3,7,7,8,6,9,7,6,5,5,5,7,6,6,6,5,4,4,4~9,9,3,3,6,7,6,7,5,9,5,6,9,4,3,3,1,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,5,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,3,8,8,4,7,7,7,6,9,9,8,5,3,7,7,8,6,9,7,6,5,5,5,7,6,6,6,5,4,4,4",
        reel_set4: "9,9,3,3,6,7,6,7,5,1,6,6,9,4,3,3,9,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,4,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,9,8,8,4,7,7,7,6,9,9,8,5,3,7,7,8,6,9,7,6,5,5,5,9,6,6,6~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,1,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,4,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,9,8,8,4,7,7,7,6,9,9,8,5,3,7,7,8,6,9,7,6,5,5,5,9,6,6,6~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,9,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,4,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,1,3,3,3,9,8,8,4,7,7,7,6,9,9,8,5,3,7,7,8,6,9,7,6,5,5,5,9,6,6,6~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,9,8,8,4,6,9,1,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,4,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,9,8,8,4,7,7,7,6,9,9,8,5,3,7,7,8,6,9,7,6,5,5,5,9,6,6,6~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,1,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,5,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,9,8,8,4,7,7,7,6,9,9,8,5,3,7,7,8,6,9,7,6,5,5,5,9,6,6,6,5,4,4,4~9,9,3,3,6,7,6,7,5,9,6,6,9,4,3,3,9,8,8,1,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,5,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,3,8,8,4,7,7,7,6,9,9,8,5,3,7,7,8,6,9,7,6,5,5,5,9,6,6,6,5,4,4,4~9,9,3,3,6,7,6,7,5,9,5,6,9,4,3,3,1,8,8,4,6,9,9,5,5,8,8,7,7,6,6,8,7,5,5,9,8,7,9,6,4,9,9,8,7,6,6,9,9,8,6,9,8,4,9,9,9,7,6,9,9,8,5,5,5,3,3,7,7,8,6,5,7,6,8,3,5,4,4,5,5,3,7,8,8,8,8,4,5,7,4,8,8,5,4,4,3,9,9,7,8,9,3,3,3,3,8,8,4,7,7,7,6,9,9,8,5,3,7,7,8,6,9,7,6,5,5,5,9,6,6,6,5,4,4,4",
        rt: "d",
        rtp: "96.47",
        s: "5,9,3,7,7,9,9,9,3,6,6,5,6,9,9,3,7,7,9,9,3,3,6,6,5,6,4,3,3,7,7,9,9,4,6,6,6,5,6,4,5,7,7,7,9,9,4,3,6",
        sa: "4,9,3,6,6,5,5",
        sb: "6,5,6,4,5,9,7",
        sc: "10.00,20.00,50.00,100.00,250.00,500.00,1000.00,3000.00,5000.00",
        scatters: "1~0,0,0,0,0,0,0~10,10,10,10,10,0,0~1,1,1,1,1,1,1",
        sh: "7",
        stime: "1633777654494",
        sver: "5",
        t: "stack",
        total_bet_max: "10,000,000.00",
        total_bet_min: "10.00",
        wilds: "2~0,0,0,0,0,0,0~1,1,1,1,1,1,1",
        wl_i: "tbm~5000",
    };

    //              api            
    if (player.lastPattern) {
        for (var key in player.lastPattern) {
            result[key] = player.lastPattern[key];
        }
    }

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["index"] = param.index;
    result["counter"] = ++param.counter;
    result["stime"] = new Date().getTime();

    if (player.betPerLine > 0) {
        result["c"] = player.betPerLine;
        result["defc"] = player.betPerLine;
    }
    return result;
};

ApiManager.prototype.GameApi = function (player, prevGameMode, param) {
    var result = {
        balance_bonus: "0",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        c: "100.00",
        counter: "1",
        index: "1",
        l: "20",
        na: "s",
        reel_set: 1,
        s: "8,8,3,3,4,8,9,4,3,8,3,3,7,8,5,5,9,8,9,8,7,7,5,8,9,9,4,4,4,3,8,8,7,5,9,8,3,4,8,8,7,7,8,7,7,4,9,4,6",
        sa: "7,9,3,9,4,8,5",
        sb: "5,7,9,7,3,8,6",
        sh: "7",
        stime: new Date().getTime(),
        sver: "5",   
        tw: "0.00",
        w: "0.00",
    };

    //          ,                          
    var screenAbove = Util.view2String(player.machine.virtualReels.above);
    var screenBelow = Util.view2String(player.machine.virtualReels.below);
    result["sa"] = screenAbove;
    result["sb"] = screenBelow;
    result["s"] = Util.view2String(player.machine.view);
    result["c"] = player.betPerLine;

    //                                 
    var winLines = player.machine.winLines;
    for (var i = 0; i < winLines.length; i++) {
        result[`l${i}`] = winLines[i];
    }
    result["index"] = param.index;
    result["counter"] = ++param.counter;
    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["tw"] = player.machine.winMoney;
    result["w"] = player.machine.winMoney;

    if (player.machine.multiPositions.length > 0) {
        result["slm_lmi"] = player.machine.multiLineIndex;
        result["slm_lmv"] = player.machine.totalMulti;
        result["slm_mp"] = player.machine.multiPositions.join();
        result["slm_mv"] = player.machine.multiValues.join();
    }

    if (player.machine.prevTumbleStatus == "NOTUMBLE" && player.machine.tumbleStatus == "TUMBLE") {
        result["rs_c"] = 1;
        result["rs_m"] = 1;
        result["rs_p"] = 0;
        result["rs"] = "mc";
        result["tmb"] = player.machine.tumbles.join('~');
        result["tmb_win"] = player.machine.tmb_res;
    }

    if (player.machine.prevTumbleStatus == "TUMBLE") {
        result["na"] = "s";
        result["tw"] = player.machine.tmb_res;
        if (player.machine.tumbleStatus == "TUMBLE") {
            result["rs_c"] = 1;
            result["rs_m"] = 1;
            result["rs_p"] = player.machine.tumbleIndex;
            result["tmb"] = player.machine.tumbles.join('~');
            result["tmb_win"] = player.machine.tmb_res;
            result["rs"] = "mc";
        } else if (player.machine.tumbleStatus == "NOTUMBLE") {
            result["rs_t"] = player.machine.tumbleIndex;
            result["tw"] = player.machine.tmb_res;
            result["w"] = player.machine.winMoney;
            result["tmb_res"] = player.machine.tmb_res;
            result["tmb_win"] = player.machine.tmb_res;
            result["na"] = "c";
        }
    }

    if (prevGameMode == "BASE") {
        if (player.machine.currentGame == "FREE") {
            result["fs"] = 1;
            result["fsmax"] = player.machine.freeSpinLength;
            result["fsmul"] = 1;
            result["fswin"] = "0.00";
            result["fsres"] = "0.00";
            result["na"] = "s";
        }
    } else if (prevGameMode == "FREE") {
        //                       
        if (player.machine.tumbleStatus == "TUMBLE") {
            result["tw"] = player.machine.freeSpinWinMoney + player.machine.tmb_res;
        } else if (player.machine.tumbleStatus == "NOTUMBLE") {
            result["tw"] = player.machine.freeSpinWinMoney;
        }

        if (player.machine.currentGame == "FREE") {
            result["na"] = "s";
            result["fs"] = player.machine.freeSpinIndex;
            result["fsmax"] = player.machine.freeSpinLength;
            result["fsmul"] = 1;
            result["fswin"] = player.machine.freeSpinWinMoney;
            result["fsres"] = player.machine.freeSpinWinMoney;
        } else if (player.machine.currentGame == "BASE") {
            //                                     ->                       
            result["na"] = "c";
            result["fs_total"] = player.machine.freeSpinLength;
            result["fsmul_total"] = 1;
            result["fswin_total"] = player.machine.freeSpinWinMoney;
            result["fsres_total"] = player.machine.freeSpinWinMoney;
        }
    }

    return result;
}

ApiManager.prototype.CollectApi = function (player, param) {
    var result = {
        balance_bonus: "0.0",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        counter: "2",
        index: "3",
        na: "s",
        stime: "1629939208592",
        sver: "5",
    };

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["stime"] = new Date().getTime();
    result["index"] = param.index;
    result["counter"] = ++param.counter;

    return result;
}

module.exports = ApiManager;