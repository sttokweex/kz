var Util = require("../../../../utils/slot_utils")

function ApiManager() { }

ApiManager.prototype.InitApi = function (player, param) {
    var result = {
        balance_bonus: "0.00",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        bl: "0",
        bls: "20,25",
        bonuses: "0",
        c: "100.00",
        cfgs: "4209",
        counter: "2",
        def_s: "4,11,6,6,5,13,10,9,13,7,10,9,3,4,11",
        def_sa: "6,2,5,3,13",
        def_sb: "5,1,12,13,6",
        defc: "100.00",
        fsbonus: "",
        gameInfo: `{props:{max_rnd_sim:"1",max_rnd_hr:"998191",max_rnd_win:"5000",max_rnd_win_a:"4000"}}`,
        gmb: "0,0,0",
        index: "1",
        l: "20",
        na: "s",
        paytable: "0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;400,120,40,0,0;300,90,30,0,0;250,70,25,0,0;200,50,20,0,0;150,35,15,0,0;100,20,10,0,0;50,10,5,0,0;50,10,5,0,0;25,5,2,0,0;25,5,2,0,0;25,5,2,0,0",
        prm: "2~1,2,3;2~1,2,3",
        purInit: `[{type:"fsbl",bet:2000,bet_level:0},{type:"fsbl",bet:4000,bet_level:0},{type:"fsbl",bet:6000,bet_level:0}]`,
        reel_set_size: 10,
        reel_set: "0",
        reel_set0: "10,11,4,6,8,9,3,1,7,13,5,12,1,8,1,8,1,3,1,8,13,3,8,3,8,3,8,11,1,11,5,8,7,3,1,8,12,5,8,11,8,4,1,6,8,1,8,7,3,6,8,4,1,5,3,8,3,7,8,11,6,3,1,8,6,3,8,1,3,1,8,4,8,6,8,12,5,6,4~12,1,13,7,11,8,2,5,10,3,6,4,9,5,3,4,3,13,9,2,7,4,2,7,3,1,9,7,1,7,1,8,3,10,3,13,7,8,9,7,2,7,1,7,9,3,8,2,9,3,7,2,3,13,2,3,1,10~3,8,4,1,5,11,10,2,13,6,7,9,12,8,11,8,6,9,8,7,13,8,5,12,10,8,6,8,12,11,12,9,5,12,8,10,11,8,5,9,6,11,8,11,8,1,8,11,12,9,8,12,10,2,12,8,2,9,8,12,9,8,7,5,11,12~11,3,6,1,2,9,5,10,13,8,4,7,12,2,8,6,1,4,6,1,8,9,4,5,8,4,1,13,4,5,3,8,9,1,8,1,9,1,12,2,1,2,10,1,2,1,2,3,9,1,2,1,12,1,9,12,1,13,1,8,1,12,8,9,1,8,10,1,4,9,1,6,9,12,1,8,6,9,1,9,5,1,6,1,2,3,6,13,1~6,1,12,10,3,7,13,11,9,5,8,4,10,7,9,1,7,13,7,13,1,11,7,11,4,9,8,1,8,9,5,10,13,7,13,8,1,10,3,1,10,13,7,13,1,7,1,3,13,7,4,1,13,4,5,7,13,7,13,4,8,13,8,4,11,3,10,4,10,4,7,10,13,10,11,9,10,13,12,13,9,7,11",
        reel_set1: "4,4,4,5,6,8,3,3,3,3,5,5,5,9,10,4,12,13,7,11,8,11,3,12,8,12,13,3,12,8,3,8,11,3,12,3,12,5,8,11,5,7,12,5,8,5,13,8,13,9,13,3,13,12,8,13,5,13,12,3,6,12,7,13,5,6,3,11,12,3,10,13,8,13,8,3,8,12,8,12,8,12,8,11,8,12,8,11,3,12,11,9,3,10,12,7,11~12,7,9,2,10,5,6,8,13,3,4,11,7,5,13,3,5,13,6,3,10,5,4,10,5,4,13,5,9,13,10,5,3,5,4,10,13,3,10,13,7,10,3,4,3,11,13,3,4,8,3,13,11,3,13,5,13,4,3,7,4,13,3,11,13,5,13,4,6,13,8,13,10,5,13~5,12,4,9,11,3,10,2,6,7,13,8,10,2,13,2,8,12,4,13,6,12,6,11,6,10,11,13,2,10,3,6,11,9,3,11,10,9,12,7,6,2,13,10,11,2,11,13,2,8,12,10,7,3,2,11,12,11,10,9,10~12,2,8,9,4,13,10,5,6,3,7,11,9,13,8,5,11,10,11,10,8,9,3,13,2,13,2,13,3,8,9,10,8,3,5,9,8,7,3,9,13,7,3,7,3,6,13~12,3,3,3,7,9,6,3,10,5,8,11,4,13,4,4,4,5,5,5,3,6,3,9,4,3,4,10,5,7,5,9,3,5,9,4,3,4,3,5,9,4,11,9,4,13,4,11,4,5,4,9,6,3,9,3,9,4,3,5,3,5,3,10,3,4,6,11,6,5,4,3,13,3,11,5,4,5,9,3,4,5,9,5,3,11,5,6,4,6,5,3,10,4,9,10,9,4,5,9,4,7,5,3,4,3,4,6",
        reel_set2: "12,8,11,5,7,6,3,13,1,9,10,4,8,5,10,9,8,1,6,5~12,7,13,2,8,6,11,5,3,10,9,4,10,7,5,7,6,3,13,8,6,10,2,5,2,8,2,5,10,2,4,2,6,10,8,5,8,13,5,6,8,2,7,3,5,3,2,5,2,6,2,10,5,2,8,5,2,5,2~10,6,3,8,11,5,9,2,12,13,1,4,7,2,11,3,1,12,2,5,8,6,1,9,11,1,3,9,6,2,1,9,2,6,3,13~6,7,9,2,3,5,4,13,12,10,11,8,10,9,11,9,13,9,7,13,10,13,7,5,9,13,7,11,7,10,7,9,13,9,10,9,13~3,13,6,1,12,8,7,5,10,4,11,9,4,9,6,8,7,8,12,5,8,6,4,6,9,7,4,13,12,7,9,6,7,13",
        reel_set3: "5,3,3,3,7,4,4,4,12,6,5,5,5,13,10,4,11,9,3,8,3,10,3,8,13,3,8,11,3,12,3,8,7,8,13,3,8,3,11,4,11,4,10,8,7,4,3,7,11,8,3,10,8,11,4,10,4,8,4,11,8~13,2,12,8,10,6,3,7,11,9,5,4,8,9,2,5,9,5,8,12,5,2,6,9,5,8,2,5,7,5,12,8,7,10,8,9,5,2,5,10~9,5,4,6,10,3,12,13,2,8,11,7,5,7,2,4,7,2~7,8,11,4,10,5,12,2,6,3,13,9,3,5,4,8,4,5,3,9,4,12,6,5,12,4,9,3,4,9,3,5,9,3,5~12,11,3,3,3,9,4,8,3,5,5,5,5,6,13,4,4,4,7,10,4,3,4,5,4,3,4,6,13,3,5,3,5,3,4,8,5,6,4,3,5,4,13,4,5,4,3,13,3,5,4,3,4,6,4,5,3,5,4,9,5,8,3,5,6,5,7,5,7,4,3,7,5,8,4,10,8,5,3,7,13,5,6,4,5,8,5,7,5,3,5,3,8,7,5,3,11,3,4,13,11,4,3,5,7,5,8,4,13",
        reel_set4: "12,7,9,13,4,11,1,3,5,6,8,10,13,10,6,13,11,7,6,5,10,13,8,4,10,6,13,11,13,6,7~6,7,3,1,12,13,4,10,5,9,8,2,11,1,8,7,4,12,4,2,12,4,5,2,13,4,8,2,12,7,8,9,12,11,4,12,4,8,12,9,8,9,11,12,3,1,12,13,1,11~13,7,2,9,12,11,6,3,4,10,8,5,3,12,11,3,4,7,4,3,11~4,1,6,2,5,7,8,9,11,13,12,3,10,8,2~11,13,5,7,10,3,12,4,9,8,1,6,12,9,10,9,10,9,13,3,9,4,13,10,9,10,13,10,3,13,8,13,9,3,9,13",
        reel_set5: "3,3,3,6,3,12,7,11,5,5,5,10,4,4,4,4,13,9,5,8,9,12,5,13,5,12,4,5,12,4,5,4,5,7,4,5,13,5,11,8,4,13,5,13,5,7,5,12,5,4,12,13,4,5,4,5,4,5,7,13,8,12,11,5,7,11,7,13,4,9,5,11,5,4,12~13,11,12,5,3,2,10,7,8,9,6,4,3,11,5,10,11,5,12,5,12,6,12,2,6,11,12,2,6,5,12,5,6,10,12,5,4,5,2,5,3,6,2,5,2,11,4,5,2,5,3,2,5,12,5,6,9,5,7~2,11,7,6,13,8,9,3,10,5,12,4,5,6,11,8,4,3,8,5,3,10,13,6,3,5,12,3,13,6~11,6,4,3,12,13,2,9,8,7,10,5,8,7,5,2,10,2,6,2,9,5,9,4,6,3,9,2,9,10,8,7,5,4,9,2,9,6,9,10,6,9,2,3,5,2,6,9,6,2,9,2,4,9,6,4,9,6,9~4,4,4,8,5,5,5,13,3,3,3,12,7,3,4,10,11,9,6,5,10,9,6,3,5,9,7,3,7,10,9,3,5,7,3,10,6,10,3,9,8,5,3,5,3,9,6,5,6,7,3,8,5,3,7,6,9,7,3,6,11,5,9,7,9,6,7,3,5,9,5,3,9,5,8,10,9,3,6,5,9,5,10,3,5,9,3,7,10,3",
        reel_set6: "5,7,4,6,3,13,8,10,1,12,9,11,3,4,13,9,8,13,4,3,8,6,12,6,9,12,4,7~4,1,13,11,5,6,7,9,8,12,10,3,5,3,9,3,6,7,9,3,5,7~1,10,6,7,8,12,3,11,9,5,4,13,6,11,3,4,11,5,3,9,3,4,12,3,8,6,3,4,5,3,4,3,5,6,8,5,4,5,6,5,6,11~3,13,9,11,12,6,5,4,7,10,1,8,7,9,13,8,4,8,10,8,9,8,13,8,4,9,6,7,4,9,13,7,5,13,1,6,8,5,6,9~10,11,9,6,1,13,5,4,3,12,7,8,13,6,1,5,1,7,1,6,3,1,6,9,1,13,1,3,7,13,9,13,6,1,13,8,12,3,5,11",
        reel_set7: "5,5,5,10,5,11,3,3,3,6,4,4,4,8,9,13,4,12,3,7,9,3,4,3,10,3,7,3,9,13,9,3,9,13,9,7,9,3,4,8,4,3,4,9,4,3,6,9,13,3,9,10,4,3,10,3,9,4,7,10,3,4,9,10,4,12,6,9,4,10,3,11,7,4~3,9,13,11,5,4,8,6,7,10,2,12,7,8,12,5,11,10,11,8,7,8,13,11,13,11,5,8,5,9,8,10,8,5~5,4,10,6,12,7,8,2,13,11,9,7,9,7,13,9,7,13,8,13,8,7,10,13,7,13,7,13,9,13,8,11,7,13,7,2,13,10,7,10~7,12,6,11,4,2,8,5,3,10,9,13,9,6,5,4,10,6,4,6,9,8,9,4,6,4,9,11,4,6,10,6,4,10,4,6,10,11,9,10,3,11,10,4,6,5,9,6,11,9,2,9,4,11,6,9,10,6,5,11~3,3,3,3,6,5,5,5,11,4,4,4,10,7,8,12,5,9,13,4,5,7,5,4,5,8,5,6,12,4,5,12,9,5,4,5,12,9,5,6,5,4",
        reel_set8: "7,4,11,6,10,9,5,8,13,12,3,1,13,8,3,6,11,5,1,5,12,13,3,13,5,9,10,13,3,13,10,13,9,5,9,3,9,11,8,9,5,9,11,4,11,5,13,9,5,9,4,11,13,11,9,8,13,12,4,11~13,2,12,7,9,8,10,6,11,4,5,1,3,4,12,7,4,8,4,7,2,9,2,9,4,10,3,7,9,10,8,2,12,2,7,9,5,4,11,2,7,4,9,7,5,12,2,9,2,4,12,2,4,12,9,4,2,5,2,4,5,2,1,4,9,12,1,7,4,7~6,12,3,1,9,7,8,5,10,4,2,11,13,11,4,12,2,3,11,5,1,12,2,4,13,5,3,2,11,2,4,11,12,9,1,2,4,11,4,5,13,2,7,11,4,3,1,2,9,7,4,7,11,2,3,12,7,11,3,9,2,7,2,1,12,2~4,10,6,8,1,7,3,9,5,12,2,11,13,10,8,12,2,6,10,12,8,6,13,10,12,13,12,2,8,12,3,12,10,2,3,12,2,9,10,13,5,10,13,2,10,12,10,12,9,12,13,6,10,5,9,13,5,13,12,2,10,2,12,2,3,8,2,10,2,5,13,8,13,5,2,10,2,10,12~12,7,4,1,9,10,8,6,5,3,13,11,1,5,13,5,4,7,8,13,10,11,5,13,5,11,10,9,10,6",
        reel_set9: "4,4,4,11,6,12,3,3,3,3,5,5,5,5,8,13,9,10,7,4,12,9,8,5,9,8,5,7,12,8,7,9,7,9,6,5,12,6,9,8,10,9,7,5,3,6,9,13,9,6,5,9,3,5,7,3,12,7,3,5,9,6,5,13,9,12,6,9,8,3,5,9,5,13,11,8,9,3,6,7,9,7,5,6,3,9,5,6,3,12,7,9,6,9,5,8,13,7,5,12,9~7,3,4,10,11,13,2,5,8,12,9,6,5,8,10,8,2,9,8,10,5,10,8,3,2,13,3,2,3,9,2,8,9,5,2,5,8,9,12,2,9,2,3,13,9,8,12,11,3,12,13,8,9,5,3,12,3,9,5,9,8,2,10,11,5,11,5~7,13,11,12,8,6,5,9,3,10,2,4,2,6,4,5,2,8,6,9,6,4,3,12,6,10,6,11,8,5,4,11,9,10,6,10,9,12,2,6,9,6,10,12,13,6,3,13,8,6,10,2,6,5,6,4,6,13,12,2~13,10,3,11,6,4,12,8,7,2,9,5,7,2,7,2,7~13,3,3,3,11,10,5,5,5,3,4,4,4,6,7,9,4,5,12,8,10,11,5,12,5,10,12,3,11,5,3,4,6,11,5",
        rt: "d",
        rtp: "96.06",
        s: "4,11,6,6,5,13,10,9,13,7,10,9,3,4,11",
        sa: "6,2,5,3,13",
        sb: "5,1,12,13,6",
        sc: "10.00,20.00,30.00,40.00,50.00,80.00,100.00,200.00,300.00,400.00,500.00,750.00,1000.00,2000.00,3000.00,4000.00,5000.00",
        scatters: "1~0,0,0,0,0~0,0,0,0,0~1,1,1,1,1",
        sh: "3",
        stime: "1629939208592",
        sver: "5",
        total_bet_max: "10,000,000.00",
        total_bet_min: "200.00",
        ver: "2",
        wilds: "2~0,0,0,0,0~1,1,1,1,1",
        wl_i: "tbm~5000;tbm_a~4000"
    };

    //              api            
    if (player.lastPattern) {
        for (var key in player.lastPattern) {
            result[key] = player.lastPattern[key];
        }
    }

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["index"] = param.index;
    result["counter"] = ++param.counter;
    result["stime"] = new Date().getTime();

    if (player.betPerLine > 0) {
        result["c"] = player.betPerLine;
        result["defc"] = player.betPerLine;
    }
    return result;
};

ApiManager.prototype.GameApi = function (player, prevGameMode, param) {
    var result = {
        balance_bonus: "0",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        bl: "0",
        c: "100.00",
        counter: "1",
        index: "1",
        l: "20",
        ls: "0",
        na: "s",
        reel_set: "0",
        stime: new Date().getTime(),
        s: "14,6,4,11,8,9,7,6,9,10,8,11,7,5,4",
        sa: "11,9,1,8,12",
        sb: "13,12,11,13,13",
        sh: "3",
        sver: "5",   
        tw: "0.00",
        w: "0.00",
        rtp: "96.06",
    };

    //          ,                          
    var screenAbove = Util.view2String(player.machine.virtualReels.above);
    var screenBelow = Util.view2String(player.machine.virtualReels.below);
    result["sa"] = screenAbove;
    result["sb"] = screenBelow;
    result["s"] = Util.view2String(player.machine.view);
    result["c"] = player.betPerLine;
    result["tw"] = player.machine.winMoney;
    result["w"] = player.machine.winMoney;

    //                                 
    var winLines = player.machine.winLines;
    for (var i = 0; i < winLines.length; i++) {
        result[`l${i}`] = winLines[i];
    }
    result["index"] = param.index;
    result["counter"] = ++param.counter;
    //                                           
    var nextAction = "s";
    if (player.machine.winMoney > 0) {
        nextAction = "c";
    }
    result["na"] = nextAction;
    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;

    if (player.machine.multiTotal > 1) {
        result["gwm"] = player.machine.multiTotal;
        var multis = [];
        for (var i = 0; i < player.machine.multiPositions.length; i++) {
            multis.push(`2~${player.machine.multiPositions[i]}~${player.machine.multiValues[i]}`);
        }
        result["rmul"] = multis.join(';');
    }

    if (prevGameMode == "BASE") {
        if (player.machine.currentGame == "FREE") {
            result["aam"] = player.machine.freeSpinCountTable;
            result["aav"] = player.machine.freeSpinCountValues;
            result["ep"] = player.machine.scatterExpanding;
            result["is"] = Util.view2String(player.machine.view);

            if (player.machine.isBuyBonus) {
                result["puri"] = player.machine.puri;
                result["purtr"] = 1;
            }

            result["s"] = Util.view2String(player.machine.scatterExpandView);
            result["fs"] = 1;
            result["fsmax"] = player.machine.freeSpinLength;
            result["fsmul"] = 1;
            result["fswin"] = 0.00;
            result["fsres"] = 0.00;
            result["na"] = "s";
        }
    } else if (prevGameMode == "FREE") {
        //                       
        result["tw"] = player.machine.freeSpinWinMoney;
        result["reel_set"] = 1;
        if (player.machine.maskView.length > 0) {
            result["is"] = Util.view2String(player.machine.maskView);
        }
        if (player.machine.freeSpinSticky.length > 0) {
            result["sty"] = player.machine.freeSpinSticky;
        }

        if (player.machine.currentGame == "FREE") {
            result["na"] = "s";
            result["fs"] = player.machine.freeSpinIndex;
            result["fsmax"] = player.machine.freeSpinLength;
            result["fsmul"] = 1;
            result["fswin"] = player.machine.freeSpinWinMoney;
            result["fsres"] = player.machine.freeSpinWinMoney;
        } else if (player.machine.currentGame == "BASE") {
            //                                     ->                       
            result["na"] = "c";
            result["fs_total"] = player.machine.freeSpinLength;
            result["fsmul_total"] = 1;
            result["fswin_total"] = player.machine.freeSpinWinMoney;
            result["fsres_total"] = player.machine.freeSpinWinMoney;
        }
    }

    result["wmt"] = "pr";
    result["wmv"] = player.machine.multiTotal;

    return result;
}

ApiManager.prototype.CollectApi = function (player, param) {
    var result = {
        balance_bonus: "0.0",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        counter: "2",
        index: "3",
        na: "s",
        stime: "1629939208592",
        sver: "5",
    };

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["stime"] = new Date().getTime();
    result["index"] = param.index;
    result["counter"] = ++param.counter;


    return result;
}
module.exports = ApiManager;