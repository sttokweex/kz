var Util = require("../../../../utils/slot_utils");

function ApiManager() { }

ApiManager.prototype.InitApi = function (player, param) {
    var result = {
        msi: "16~17",
        def_s: "3,4,5,6,7,8,7,6,8,7,6,5,4,3,4,5,3,4,5,6,7,8,7,6,8,7,6,5,4,3,4,5,3,4,5,6,7,8,7,6,8,7,6,5,4,3,4,5,3,4,5,6,7,8,7,6,8,7,6,5,4,3,4,5",
        balance: "100,000.00",
        cfgs: "1",
        accm: "cp~tp~lvl~r",
        ver: "2",
        acci: "0",
        index: "1",
        balance_cash: "100,000.00",
        def_sb: "8,7,6,5,4,3,4,5",
        reel_set_size: "2",
        def_sa: "3,4,5,6,7,8,7,6",
        reel_set: "0",
        balance_bonus: "0.00",
        na: "s",
        accv: "0~140~0~0",
        scatters: "1~0,0,0,0,0,0,0,0~0,0,0,0,0,0,0,0~1,1,1,1,1,1,1,1",
        gmb: "0,0,0",
        rt: "d",
        gameInfo: '{rtps:{purchase:"96.38",regular:"96.23"},props:{max_rnd_sim:"1",max_rnd_hr:"250000000",max_rnd_win:"7500"}}',
        wl_i: "tbm~7500",
        stime: "1644728852639",
        sa: "3,4,5,6,7,8,7,6",
        sb: "8,7,6,5,4,3,4,5",
        sc: "10.00,20.00,30.00,40.00,50.00,100.00,200.00,300.00,400.00,500.00,750.00,1000.00,2000.00,3000.00,4000.00,5000.00",
        defc: "100.00",
        sh: "8",
        wilds: "2~0,0,0,0,0,0,0,0~1,1,1,1,1,1,1,1",
        bonuses: "0",
        fsbonus: "",
        c: "100.00",
        sver: "5",
        counter: "2",
        paytable:
            "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,10000,2000,2000,2000,2000,2000,500,500,500,500,500,250,250,250,125,125,125,50,25,15,10,0,0,0,0;5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,5000,1000,1000,1000,1000,1000,250,250,250,250,250,125,125,125,75,75,75,25,12,7,5,0,0,0,0;3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,500,500,500,500,500,150,150,150,150,150,75,75,75,37,37,37,12,7,5,3,0,0,0,0;1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,250,250,250,250,250,100,100,100,100,100,50,50,50,25,25,25,7,4,3,2,0,0,0,0;1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,200,200,200,200,200,75,75,75,75,75,35,35,35,20,20,20,6,4,3,2,0,0,0,0;750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,150,150,150,150,150,50,50,50,50,50,25,25,25,15,15,15,5,4,3,2,0,0,0,0;500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,100,100,100,100,100,37,37,37,37,37,20,20,20,10,10,10,4,3,2,1,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
        l: "20",
        total_bet_max: "10,000,000.00",
        reel_set0: "8,9,7,9,9,8,8,9,7,9,9,8,4,8,9,9,3,7,7,4,7,5,3,7,8,4,7,5,5,9,8,8,7,4,4,5,6,6,4,6,6,7,3,7,8,5,6,7,8,5,8,8,6,7,7,6,8,3,9,4,4,5,5,5,8,4,7,6,7,4,9,5,9,7,8,7,7,8,7,3,5,7,8,3,9,4,5,3,8,7,8,9,3,3,4,8,4,9,4,3,9~9,6,6,5,5,8,6,8,8,7,8,5,8,3,8,3,6,6,8,8,7,6,8,4,5,6,9,6,9,6,8,8,6,8,6,6,8,4,8,8,5,5,7,5,8,5,7,3,5,8,5,8,5,3,5,3,7,8,9,6,6,8,4,6,6,8,3,6,3,3,5,3,5,8,3,6,7,7,5,7,7,7,8,9,6,6,3,5,8,3,8,4,6,4,9,9,4,4,6~6,7,9,7,9,4,7,9,4,4,4,8,4,7,6,8,6,7,7,7,7,6,6,8,9,9,9,5,5,9,7,9,4,7,9,6,8,9,9,7,9,4,5,4,3,3,9,6,6,7,4,4,9,3,9,5,7,6,4,7,9,7,7,4,7,8,8,7,9,4,7,7,9,9,4,4,6,9,9,7,4,9,3,8,7,5,8,4,9,5,9,4,7,9,7,8,8,3,9,6,7,5,7~8,7,8,8,5,8,6,6,5,6,6,8,6,5,8,5,8,3,8,9,5,6,8,8,6,6,7,7,3,6,8,5,9,6,3,8,9,6,8,8,6,6,5,6,6,5,3,8,6,3,8,3,6,5,8,7,8,4,4,8,3,9,9,7,6,5,5,4,8,4,7,8,8,3,6,6,4,5,5,8,4,6,3,6,3,3,9,7,5,8,3,8,5,7,7,7,3,5,9~7,4,8,7,8,9,9,8,3,8,8,5,4,8,8,6,6,8,4,8,7,9,9,3,9,5,7,9,8,4,3,9,8,4,7,8,7,4,3,4,9,5,3,7,7,3,7,3,3,7,6,4,3,7,6,7,5,5,5,8,9,4,4,7,7,5,9,5,8,9,7,7,5,5,7,8,5,7,9,9,8,9,6,5,8,3,7,8,4,5,7,9,6,6,8,8,6,7,4,4,9,3,8~7,7,9,4,7,9,7,9,7,7,7,7,5,5,9,7,8,4,7,6,9,9,6,6,5,4,9,7,3,6,6,7,4,4,7,8,8,3,6,9,7,9,4,4,4,8,8,9,4,5,9,5,4,4,9,6,6,4,5,7,8,7,7,4,7,8,7,4,7,6,8,7,6,9,6,9,9,3,3,7,8,9,5,6,9,4,5,6,7,9,4,9,9,7,8,9,4,7,9,9,9,4,3,9~3,6,8,6,6,5,6,8,3,8,5,7,7,6,6,5,7,8,6,4,7,7,7,5,8,8,3,6,6,7,8,5,5,4,3,9,8,5,8,8,3,8,4,3,8,8,4,3,6,6,4,6,5,9,8,8,6,6,8,7,4,4,5,8,6,5,9,8,6,6,3,5,3,9,9,6,8,5,8,6,7,9,7,3,3,8,5,8,6,5,8,3,6,8,3,3,6,6,9,8,6~3,9,5,3,8,3,8,6,7,8,4,8,7,8,6,8,7,8,8,7,5,6,6,7,9,8,8,6,9,9,7,7,9,9,7,3,3,7,4,9,8,4,4,9,7,8,9,7,4,3,8,5,7,7,6,6,9,7,9,6,8,7,3,8,4,5,3,5,8,5,5,4,9,8,7,4,8,7,7,4,8,7,4,5,9,5,5,5,4,3,5,3,9,7,9,9,3,8,8,4,4",
        s: "3,4,5,6,7,8,7,6,8,7,6,5,4,3,4,5,3,4,5,6,7,8,7,6,8,7,6,5,4,3,4,5,3,4,5,6,7,8,7,6,8,7,6,5,4,3,4,5,3,4,5,6,7,8,7,6,8,7,6,5,4,3,4,5",
        accInit: '[{id:0,mask:"cp;tp;lvl;r"},{id:1,mask:"cp;tp;lvl;r"}]',
        t: "stack",
        reel_set1: "7,8,8,9,8,3,8,4,8,3,6,6,7,9,7,4,9,8,9,7,4,9,4,4,5,5,9,5,4,8,7,8,8,9,7,7,9,9,8,9,7,7,5,4,7,9,5,8,7,3,5,6,7,7,8,7,6,4,7,4,7,8,5,5,5,3,8,3,7,9,6,5,7,3,7,9,9,8,4,4,3,8,9,9,8,7,6,3,3,4,5,7,5,8,8,3,4,6,6,8~9,7,9,7,9,6,7,4,9,5,9,9,9,7,9,5,5,7,5,7,9,9,6,9,8,4,7,5,6,3,7,9,9,6,6,9,9,4,9,7,4,6,4,8,9,7,9,8,4,4,9,7,5,9,8,8,6,6,4,4,7,5,4,6,4,4,4,8,7,7,4,7,9,7,4,7,8,6,3,6,6,4,9,3,5,7,6,4,9,3,3,9,8,8,7,7,7,7,9,7,7,9,7,8,4~5,6,7,6,6,8,6,6,5,6,8,3,8,3,8,9,8,4,8,8,3,6,3,4,3,4,4,5,8,5,8,3,7,8,8,3,8,5,7,8,3,5,4,6,6,8,8,3,5,3,3,4,8,8,6,6,5,6,6,9,3,9,8,6,8,6,5,8,9,9,6,6,5,6,6,7,7,7,8,9,5,6,8,7,6,7,5,6,7,8,7,7,6,9,8,5,5,6,8~8,6,3,7,5,5,7,9,7,5,7,8,5,5,5,4,4,3,3,7,7,5,7,5,7,4,6,6,3,7,8,8,7,5,3,8,5,4,4,8,8,4,9,8,4,3,4,8,6,9,3,9,8,8,3,8,4,9,7,8,9,9,7,6,4,7,9,5,8,9,9,7,7,8,7,8,5,8,9,3,9,9,7,9,4,8,9,8,4,3,4,6,6,7,8,4,6,8,9~4,4,9,4,9,9,7,9,4,9,7,7,9,4,9,6,7,6,7,6,9,7,9,9,9,6,7,4,8,9,7,6,6,3,8,5,9,7,7,7,7,4,9,7,4,6,6,8,7,5,7,8,7,7,4,4,4,7,6,9,6,6,5,9,9,8,8,9,4,4,8,8,7,4,9,9,7,8,7,3,7,6,7,9,6,9,5,3,3,9,4,9,4,3,5,5,8,7,9,4,5,9,5,4,7~5,6,8,6,6,5,8,8,5,5,8,6,6,8,6,8,3,6,6,8,9,8,5,7,8,8,6,3,5,8,8,9,4,3,9,9,6,6,7,7,7,6,5,7,5,5,8,5,8,9,8,4,5,3,6,6,8,6,4,7,7,3,3,4,4,5,3,8,5,4,6,6,8,7,3,7,9,4,6,8,5,8,5,6,8,6,8,7,6,8,8,3,6,9,3,5,3,8,3,6,6,7~6,6,5,8,9,9,3,7,9,8,4,4,5,4,9,8,8,4,5,9,8,7,8,7,4,9,4,8,9,7,8,3,3,8,7,5,6,3,7,4,5,8,9,7,3,8,7,7,8,3,7,7,8,7,9,4,5,5,8,9,5,5,5,9,9,8,8,3,7,7,3,5,7,5,7,6,3,7,9,9,4,9,4,5,6,3,6,6,4,4,8,3,7,8,8,9,7,8,6,7,4~4,7,4,4,7,4,9,7,8,9,7,9,8,9,7,9,9,8,9,4,9,6,6,9,8,8,4,9,8,6,5,6,7,3,4,7,6,8,8,7,7,7,7,6,5,4,4,9,9,6,6,7,9,3,9,4,5,7,8,3,4,4,4,7,3,3,7,9,4,9,7,6,7,7,9,4,5,5,9,7,6,9,7,7,4,9,9,9,6,4,7,4,5,7,9,9,7,5,7,8,9",
        purInit: '[{type:"d",bet:2000}]',
        total_bet_min: "10.00",
    };

    //              api            
    if (player.lastPattern) {
        for (var key in player.lastPattern) {
            result[key] = player.lastPattern[key];
        }
    }

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["index"] = param.index;
    result["counter"] = ++param.counter;
    result["stime"] = new Date().getTime();

    if (player.betPerLine > 0) {
        result["c"] = player.betPerLine;
        result["defc"] = player.betPerLine;
    }
    return result;
};

ApiManager.prototype.GameApi = function (player, prevGameMode, param) {
    var result = {
        tw: "0.00",
        ds: "10~23;11~53;12~5;13~59;14~36",
        balance: "98,000.00",
        accm: "cp~tp~lvl~r",
        acci: "0",
        index: "2",
        balance_cash: "98,000.00",
        reel_set: "0",
        balance_bonus: "0.00",
        dsa: "1;1;1;1;1",
        na: "s",
        accv: "0~140~0~0",
        stime: new Date().getTime(),
        sa: "3,8,9,5,7,8,8,8",
        sb: "6,5,4,7,7,9,6,8",
        dsam: "v;v;v;v;v",
        sh: "8",
        wmt: "pr",
        wmv: "1",
        c: "100.00",
        sver: "5",
        counter: "4",
        l: "20",
        s: "7,6,8,8,9,7,5,8,3,3,9,6,8,7,6,5,4,5,7,7,3,9,3,4,4,6,6,3,7,7,8,7,3,6,9,8,3,6,6,3,7,8,7,7,4,6,8,8,7,5,9,6,4,8,3,4,8,7,9,4,3,7,8,3",
        w: "0.00",
    };

    //          ,                          
    var screenAbove = Util.view2String(player.machine.virtualReels.above);
    var screenBelow = Util.view2String(player.machine.virtualReels.below);
    result["sa"] = screenAbove;
    result["sb"] = screenBelow;
    result["s"] = Util.view2String(player.machine.view);
    result["c"] = player.betPerLine;

    if (player.machine.level > 0) {
        result["acci"] = 1;
    } else {
        result["acci"] = 0;
    }

    //                                 
    var winLines = player.machine.winLines;
    for (var i = 0; i < winLines.length; i++) {
        result[`l${i}`] = winLines[i];
    }
    result["index"] = param.index;
    result["counter"] = ++param.counter;
    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["tw"] = player.machine.winMoney;
    result["w"] = player.machine.winMoney;

    var transPos = [];
    var dsa = [];
    var dsam = [];
    for (var i = 0; i < player.machine.transPos.length; i++) {
        if (player.machine.transPos[i] != -1) {
            transPos.push(`${i + 10}~${player.machine.transPos[i]}`);
            dsa.push(1);
            dsam.push("v");
        }
    }

    result["accv"] = `${player.machine.score}~${player.machine.maxScore}~${player.machine.level}~${player.machine.score > 0 ? 1 : 0}`;

    if (transPos.length > 0) {
        result["ds"] = transPos.join(";");
        result["dsa"] = dsa.join(";");
        result["dsam"] = dsam.join(";");
    } else {
        delete result["ds"];
        delete result["dsa"];
        delete result["dsam"];
    }

    // Midnight Riches
    if (player.machine.prevLevel == 0 && player.machine.level == 1) {
        result["purtr"] = 1;
    }

    //       1            
    if (player.machine.level > 0) {
        result["puri"] = 0;
        result["gwm"] = player.machine.multi;
        result["wmv"] = player.machine.multi;
    }

    //                          
    var trail = "";
    if (player.machine.transforming != -1) {
        trail = `feature~c${player.machine.transforming - 9}`;
    }

    if (player.machine.transStack.length > 0) {
        var transStack = [];
        for (var j = 0; j < player.machine.transStack.length; j++) {
            transStack.push(`c${player.machine.transStack[j] - 9}`);
        }
        if (trail != "") trail += ";";
        trail += "pending~" + transStack.join();
    }

    if (player.machine.levelEndFlag) {
        trail += ";pending~fever";
    }

    if (trail != "") {
        result["trail"] = trail;
    }

    if (player.machine.transCode != "") {
        var mode = player.machine.transforming;
        if (mode == 10) {
            result["sty"] = player.machine.transCode;
        } else if (mode == 11) {
            result["srf"] = player.machine.transCode;
        } else if (mode == 12) {
            result["rwd"] = player.machine.transCode;
        } else if (mode == 13) {
            result["rwd"] = player.machine.transCode;
        } else if (mode == 14) {
            result["rwd"] = player.machine.transCode;
        }
    }

    if (player.machine.maskView.length > 0) {
        result["is"] = Util.view2String(player.machine.maskView);
    }

    if (player.machine.prevTumbleStatus == "NOTUMBLE" && player.machine.tumbleStatus == "TUMBLE") {
        result["rs_c"] = 1;
        result["rs_m"] = 1;
        result["rs_p"] = 0;
        result["rs"] = "mc";
        result["tmb"] = player.machine.tumbles.join("~");
        result["tmb_win"] = player.machine.tmb_res;
    }

    if (player.machine.prevTumbleStatus == "TUMBLE") {
        result["na"] = "s";
        result["tw"] = player.machine.tmb_res;
        delete result["reel_set"];

        if (player.machine.tumbleStatus == "TUMBLE") {
            result["rs_c"] = player.machine.tumbleIndex;
            result["rs_m"] = player.machine.tumbleIndex;
            result["rs_more"] = 1;
            result["rs_p"] = player.machine.tumbleIndex - 1;
            result["tmb"] = player.machine.tumbles.join("~");
            result["tmb_win"] = player.machine.tmb_res;
            result["rs"] = "mc";
        } else if (player.machine.tumbleStatus == "NOTUMBLE") {
            result["rs_t"] = player.machine.tumbleIndex;
            result["tw"] = player.machine.tmb_res;
            result["w"] = player.machine.winMoney;
            result["tmb_res"] = player.machine.tmb_res;
            result["tmb_win"] = player.machine.tmb_res;
            result["na"] = "c";
        }
    }

    return result;
};

ApiManager.prototype.CollectApi = function (player, param) {
    var result = {
        balance_bonus: "0.0",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        counter: "2",
        index: "3",
        na: "s",
        stime: "1629939208592",
        sver: "5",
    };

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["stime"] = new Date().getTime();
    result["index"] = param.index;
    result["counter"] = ++param.counter;

    return result;
};

module.exports = ApiManager;