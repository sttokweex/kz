var Util = require("../../../../utils/slot_utils");

function ApiManager() { }

ApiManager.prototype.InitApi = function (player, param) {
    var result = {
        def_s: "13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,9,10,10,5,6,3,4,8,9,10,8,10,9,12,10,6,6,9,12,8,9,8,8,10",
        balance: "100,000.00",
        cfgs: "1",
        ver: "2",
        index: "1",
        balance_cash: "100,000.00",
        def_sb: "9,7,4,6,9,9",
        reel_set_size: "6",
        def_sa: "9,10,3,10,10,12",
        reel_set: "0",
        balance_bonus: "0.00",
        na: "s",
        scatters: "1~0,0,0,0,0,0~0,0,0,0,0,0~1,1,1,1,1,1",
        gmb: "0,0,0",
        rt: "d",
        gameInfo: "{rtps:{regular:\"96.52\"},props:{nas:\"13\",max_rnd_sim:\"1\",max_rnd_hr:\"1059150\",max_rnd_win:\"5000\"}}",
        wl_i: "tbm~5000",
        stime: "1646353827104",
        sa: "9,10,3,10,10,12",
        sb: "9,7,4,6,9,9",
        sc: "10.00,20.00,30.00,40.00,50.00,100.00,200.00,300.00,400.00,500.00,750.00,1000.00,2000.00,3000.00,4000.00,5000.00",
        defc: "100.00",
        sh: "8",
        wilds: "2~0,0,0,0,0,0~1,1,1,1,1,1",
        bonuses: "0",
        fsbonus: "",
        st: "rect",
        c: "100.00",
        sw: "6",
        sver: "5",
        counter: "2",
        paytable: "0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;200,100,50,20,0,0;50,20,10,6,0,0;50,20,10,6,0,0;40,16,8,6,0,0;20,12,6,4,0,0;10,6,4,2,0,0;10,6,4,2,0,0;8,4,2,1,0,0;8,4,2,1,0,0;8,4,2,1,0,0;0,0,0,0,0,0",
        l: "20",
        reel_set0: "12,7,9,5,9,11,9,11,12,1,6,5,11,9,8,9,7,10,5,12,11,11,5,9,9,4,7,11,5,11,9,7,8,9,9,11,3,11,9,11,10,10,11,11,9,11,9,12,3,5,7,9,7,11,9,7,9,7,11,4,12,7,5,5,10,5,10,5,11,11,9,11,5,5,9,9,6,12,9,5,12,8,12,1,6,9,6,8,7,9,8,11,7,11,9,9,3,5,11,8,5,9,9,12,4,8,11,11,7,8,11,4,11,5,11,7,7,9,3,11,11,7,7,11,12,5,5,9,5,3,10,11,5,11,11,9,7,11,11,4,12,10,7,6,9,11,3,5,3,7~12,10,6,12,11,4,8,8,12,11,10,5,5,6,8,6,10,10,6,8,9,12,7,11,10,12,2,12,10,6,12,8,9,10,12,10,10,6,11,3,12,8,8,10,12,12,10,12,7,9,12,8,6,6,4,8,6,3,9,12,6,12,12,10,7,12,7,7,12,12,6,11,4,1,3,5,10,10,11,6,8,10,4,12,11,10,8,10~4,12,5,9,9,10,3,12,4,11,7,10,5,12,10,8,5,9,10,7,12,6,10,10,5,5,12,6,8,3,7,7,3,11,12,8,7,6,8,10,8,11,12,9,10,9,7,9,11,12,12,3,10,6,9,11,10,9,12,5,10,6,12,4,6,12,7,11,9,5,7,1,9,6,10,10,6,8,8,12,7,6,10,9,11,12,6,11,12,8,6,12,5,3,12,11,12,9,11,10,7,7,11,11,3,6,11,4,8,10,10,8,6,12,4,5,9,6,6,12,8,11,9,4,5,4,2,10,7,12,5,8,4,5,7,10,8,12,11,12,5,11,6,6,11,11,8,10,6,5,7,7,9,10,8,12,9,9,12,8,11,12,6,11,10,9,6,5,10,8,12,7,7,2,10,9,12,1~7,5,11,9,4,5,8,7,2,11,8,1,10,9,12,6,10,6,7,8,10,3,11,11,9,9,10,12,9,12,6,10,6,12,3,10,11,9,5,7,8,5,12,9,2,10,9,7,9,6,12,7,10,8,6,12,6,5,6,8,3,8,4,3,10,4,12,12,6,7,6,8,8,7,8,10,12,5,7,5,7,4,6,1,4,7,11,10,7,10,1,4,5,6,6,5,9,8,12,12,10,5,10,6,11,10,12,3,2,5,4,7,10,7,6,6,7,8,10,11,5,11,12,6,10,12,11,12,11,5,9,10,12,7,7,9,9,10,10,5,12,11,11,9,8,11,8,7,8,12,11,12,6,12,10,12,11,9,4,8,5,12,11,12,7,12,8,10,5,11,8,11,12,6,3,12,12,11,9,12,11,4,9,9,10,11,10,9,11,6,3,9,12,12,6,6,8,6,5,10,9,10~9,9,6,9,8,10,6,10,9,12,10,12,7,10,11,7,3,7,10,12,6,6,9,8,9,4,2,11,12,10,4,12,10,12,7,11,10,9,12,11,6,6,10,8,10,7,12,5,8,5,11,8,7,6,8,12,12,5,9,1,5,8,6,5,12,6,11,9,11,7,10,10,11,6,8,11,4,3,6,12,3,11,7,5,10,5,12,4,9,11,5,12,8,7~10,5,10,12,11,6,4,11,8,7,7,10,10,12,11,2,5,9,4,12,9,6,8,1,12,6,8,5,7,3,9",
        s: "13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,9,10,10,5,6,3,4,8,9,10,8,10,9,12,10,6,6,9,12,8,9,8,8,10",
        reel_set2: "9,12,6,10,5,10,4,6,5,4,12,11,11,5,9,7,12,8,9,6,7,5,11,9,4,12,11,11,5,3,11,11,12,10,12,8,10,10,12,6,6,12,12,10,5,9,12,10,8,12,6,6,9,11,11,8,11,10,7,12,11,12,12,8,12,11,9,4,5,7,10,5,7,12,10,9,9,11,12,5,9,7,3,7,8,4,7,3,9,11,5,9,5,12,11,10,12,9,11,8,10,7,4,11,4,7,10,6,10,10,12,7,12,7,1,12,11,8,4,7,9,6,9,9,6,10,8,12,8,5,9,8,12,10,4,3,12,7,10,6,11,10,11,8,5,9,4,6,10,1,5,6,3,8,12,8,11,12,8,6,8,7,11,10,11,7,6,6,12,10,12,5,7,7,9,3,10,9,3,11,9,9,11,6,10,5,6,3~1,12,9,9,8,8,4,5,10,12,12,11,5,6,10,12,6,6,12,11,9,11,5,11,10,11,6,11,6,12,11,4,6,8,10,9,6,3,5,6,10,10,5,7,7,9,10,7,9,8,10,8,2,7,7,12,9,9,12,4,10,5,3,6,5,11,12,5,6,3,8,5,9,5,8,7,12,7,10,8,11,9,11,10,9,10,11,3,12,6,9,10,12,9,12,11,12,9,9,1,9,4,11,11,10,10,8,6,12,5,7,12,2,12,8,7,8,4,9,12,4,11,10,4,7,11,12,8,12,7,3,12,11,7,11,10,5,4,12,11,10,6,11,12,6,3~5,7,11,11,3,11,11,7,4,7,11,7,11,12,12,11,8,7,7,11,6,9,3,7,8,10,8,12,3,6,12,6,6,8,9,10,8,5,11,11,9,5,12,9,10,8,12,12,5,10,12,8,8,3,6,6,8,6,12,6,6,5,12,11,5,11,6,7,10,5,12,10,12,9,5,4,10,12,3,8,10,3,9,9,2,12,4,7,5,11,8,10,4,3,11,11,3,7,5,9,2,12,6,9,4,12,10,6,11,12,12,4,12,5,9,12,12,11,9,10,7,11,9,12,10,10,9,5,9,3,12,6,4,6,12,11,6,11,10,6,7,9,10,11,12,9,5,7,6,12,10,1,1,10,12,8,11,11,9,9,10,10,12,7,8,9,8,5,1,10,8,6,9,4,10,4,7,12,8,5,8,10,12,7,10,10,12,11,8,12,11,10,11,5,9,9,11,10,6,8,7,2,10,4,11,12,12,5,12,10,9,9,11,7,5,7,4,11,5,11,6,4,9,6,3,9~10,10,8,12,1,7,6,5,9,8,9,7,2,11,6,5,11,11,12,10,4,12,9,3~12,10,12,9,1,6,8,10,12,5,12,11,3,2,5,12,6,10,6,7,6,5,8,7,9,12,9,10,10,9,3,4,8,11,10,9,7,6,4,10,8,5,9,7,12,12,11,12,11,7,8,11,5,11,11,3,4,11~8,12,5,9,12,12,8,4,11,9,10,11,10,4,4,10,10,6,9,6,10,5,7,11,7,4,5,1,9,5,10,6,6,3,4,3,9,8,9,6,10,6,10,11,5,5,11,12,12,6,5,11,11,10,12,12,7,12,12,7,6,9,5,8,12,4,4,10,3,1,8,8,9,7,5,9,12,11,11,5,5,11,10,4,2,11,10,12,7,7,6,10,8,9,11,3,12,12,8,10,9,3,12,6,12,4,10,3,11,7,11,4,10,11,10,9,12,10,10,12,8,9,12,11,10,5,8,3,6,12,5,3,6,11,9,12,12,6,5,9,12,8,12,7,7,10,7,11,9,6,3,12,7,7,9,7,12,11,10,7,11,12,8,9,8,9,8,6,11,6,12,9,12,6,10,12,2,8,2,11,12,8,10,11,8,5,10,6,11,7,11,7,11,11,6,5,9,5,1,4,9,9",
        t: "243",
        reel_set1: "3,10,4,10,6,12,7,12,12,11,5,6,8,6,8,12,9,8,11,10,1,10,12~7,5,6,7,5,11,3,9,9,8,7,9,9,7,9,12,9,9,3,11,3,3,11,5,6,5,9,9,7,9,11,6,11,10,12,9,9,7,9,8,5,9,4,8,12,12,5,11,9,10,9,9,4,11,5,7,9,10,12,4,7,9,4,5,10,11,8,9,7,7,9,7,3,5,11,9,4,9,7,9,8,6,5,5,10,11,11,8,9,11,11,7,7,11,11,5,1,9,12,5,11,8,5,11,12,11,9,7,12,6,9,9,7,5,11,9,7,11,1,11,11,9,9,11,9,9,8,5,9,5,11,12,11,9,2,9,6,7,5,4,5,11,3,8,11,9,11,7,2,8,10,6,8,11,9,5,11,8,11,5,7,11,3,11,9,7,10,11,7,9,11,5,7,10,2,5,7,12,11,5,9,8,5,11,12,11,11,1,3,5,12,11,9,9,5,11,5,11,5,11,11,9,12,12,11,5,10,11,5,5,7,8,7,11,7,7,11,11,12,7,12,5,7,11,9,12,3,7,11,10,9,3,4,11,3,7,9,11,11,5,9,5,6,10,9,4,12,11,12~11,9,5,4,8,12,10,11,10,11,12,7,5,3,3,7,7,12,8,5,6,10,9,11,7,12,10,6,4,10,6,9,9,10,1,12,6,9,12,8,12,6,8,2,11,5~11,8,4,11,10,11,12,9,5,9,9,7,10,7,12,8,11,7,10,2,5,11,9,10,7,12,6,1,12,8,10,12,11,10,12,10,12,10,10,9,10,10,7,6,10,10,11,12,9,6,10,8,11,9,7,5,6,12,4,8,11,8,8,6,10,10,4,6,5,7,5,11,6,6,1,12,12,7,3,12,5,6,11,8,7,8,2,5,2,8,3,5,9,5,9,9,6,6,7,12,7,3,10,6,5,3,9,4,9,10,4,11,12,6,9,9,6,4,11,12,7,5,9,11,10,5,12,6,12,9,6,10,8,5,5,12,7,12,11,11,6,6,11,4,8,8,7,3,11,12,11,10,6,7,5,8,6,9,12,9,10,6,11,5,12,6,11,1,11,12,8,12,10,12,8,12,5,9,12,12,7,11,6,10,10,9,4,7,10,6,7,5,7,9,6,10,7,7,12,10,9,9,10,10,12,5,4,9,11,12,12,11,7,8,9,12,4,6,10,10,8,8,3,9,12,11,4,11,8,8,7,12,10,9,11,12,3,8,12,11,5,3,12,6,7,5,3,12,6,8,6,12,12,8,11,6,5,7,8,10,10~9,12,12,7,10,10,8,5,10,10,6,5,2,7,12,8,9,11,3,12,8,6,9,5,12,12,8,7,9,9,11,6,12,11,12,12,9,9,7,6,6,12,6,7,9,3,8,5,11,10,12,11,12,6,5,5,12,8,5,10,6,4,7,11,8,5,12,6,4,6,1,12,10,3,12,12,10,11,9,5,7,3,12,10,5,12,10,12,7,5,11,11,1,8,5,5,11,6,10,6,12,12,10,2,8,8,11,10,12,7,9,6,8,7,9,5,5,6,8,3,10,12,6,9,11,9,11,12,5,10,10,6,11,9,7,5,8,8,10,10,4,7,11,7,11,4,4,5,10,10,6,7,6,6,7,7,9,3,10,3,10,6,4,10,11,6,4,8,6,8,10,11,10,9,10,8,5,12,4,6,10,7,9,12,7,9,10,11,4,6,5,11,7,1,9,9,8,9,10,12,9,12,7,12,2,12,6,6,12,11,8,7,11,9,12,10,10,12,12,10,11,12,12,7,9,10,6,11,8,4,9,8,4,12,10,9,8,11,7,3,10,11,6,9,12,6,8,11,8,12,11,5,11,7~6,12,8,11,10,11,5,12,7,10,6,9,9,6,10,6,11,5,1,10,6,10,6,11,12,5,11,1,8,12,11,10,5,3,2,7,10,7,11,9,4,10,10,12,9,10,5,4,8,5,3,12,11,3,12,11,5,9,6,10,7,12,8,8,6,9,12,11,5,6,11,6,4,7,6,9,6,11,6,10,7,9,7,11,11,10,9,11,10,12,9,2,12,9,12,6,5,5,9,8,12,11,11,12,12,10,6,5,11,10,3,12,9,11,10,4,5,10,5,8,12,5,11,9,12,6,6,4,11,8,6,7,8,8,6,9,12,6,7,6,8,5,12,12,8,9,8,8,5,5,7,8,9,10,3,6,7,6,8,10,9,10,8,12,9,12,9,12,12,8,3,7,4,9,9,11,10,9,11,5,10,10,11,8,10,12,4,4,7,10,5,10,6,10,4,9,8,6,11,12,7,6,5,7,7,6,8,12,7,12,12,7,5,12,8,7,8,12,11,10,12,7,10,4,8,12,12,2,7,7,8,7,12,4,12,9,12,9,10,11,9,5,11,12,10,6,11,10,6,3,3,12,1,7,6,10,3,10,7,11,12",
        reel_set4: "6,6,11,12,5,6,10,10,11,9,10,10,12,10,11,11,9,6,10,10,9,7,5,4,11,3,10,6,7,4,12,7,3,12,11,5,6,11,7,12,12,5,7,11,4,12,5,6,7,11,8,5,12,6,12,10,8,8,3,12,7,8,12,12,5,9,7,11,11,8,10,10,8,5,11,12,8,12,6,4,12,10,9,6,5,5,12,5,12,9,8,9,7,10,11,9,7,6,11,6,6,12,11,3,11,10,6,7,9,11,8,11,8,6,11,9,6,4,12,4,9,7,9,9,5,5,9,3,10,8,9,4,12,7,6,7,7,8,6,12,12,4,10,9,7,12,10,12,5,3,11,12,10,9,1,7,11,10,9,8,9,11,9,5,5,11,3,8,10,12,9,7,8,11,10,4,1,11,4,12,3,9,12,12,10,10,8~11,5,3,11,11,3,9,5,11,5,3,11,7,9,5,11,9,7,9,3,7,11,9,11,7,3,11,9,7,5,7,9,9,11,9,11,5,5,7,7,3,11,11,11,11,9,11,7,9,5,7,11,7,11,7,7,9,5,11,5,3,9,9,11,9,3,9,5,11,11,7,9,5,11,5,9,11,9,9,7,11,11,7,11,5,5,7~6,6,10,6,4,6,10,10,6,10,8,8,12,12,12,8,8,4,10,12,6,8,6,12,10,12,10,6,6,8,6,10,10,8,12,12,8,12,8,4,8,10,12,4,10,10,12,6,6,12,12,12,6,10,12,8,10,10,8,8,10,8,6,12,8,6,10,12,12,12,10,4,4,10,10,12,4,12,12,10,12,12,12,6,8,12,6,6,10,12,12,8,8,12,12,12,4,8,8,4,12,12,10,8,6,10,12,12,12,10,10,12,8,8,10,12,12,10,6,6,4,12,6,6,4,8,4,4,6,6,12,8,10,8,10,12,12,10,8,10,10~12,11,5,11,10,8,5,12,3,12,8,5,9,2,7,12,12,6,9,12,12,6,4,12,11,8,6,11,11,6,10,11,5,9,7,11,11,10,7,9,10,12,9,8,5,10,10,12,11,9,11,3,4,10,8,11,10,5,12,3,11,9,9,12,9,6,5,11,12,8,8,3,9,10,5,9,5,7,7,12,7,12,11,5,10,5,8,8,5,12,12,4,12,11,6,6,10,4,10,7,12,11,12,6,9,10,10,11,4,7,12,3,4,2,9,10,5,9,8,5,12,9,12,9,7,11,12,3,6,9,6,11,10,12,7,4,4,10,7,9,4,10,8,10,6,3,6,10,11,5,10,9,12,7,3,12,6,11,9,7,4,11,10,11,11,6,12,10,8,6,7,9,8,10,11,6,10,8,8,6,7~10,12,10,12,4,8,6,11,5,9,10,9,12,12,11,9,5,7,8,5,11,2,5,5,9,12,6,6,5,11,6,11,12,12,9,10,10,6,6,12,11,7,12,11,9,12,9,12,4,8,7,7,5,11,8,12,9,6,12,12,9,9,12,7,3,9,6,3,11,3,11,8,4,5,10,10,7,12,4,12,8,7,10,5,4,3,9,11,5,7,8,3,10,8,10,11,8,2,3,11,10,10,7,9,6,4,11,12,10,12,12,11,10,7,6,4,10,5,6,6,9,10,11,11,9,10,8,8,7~10,12,9,12,10,8,10,8,6,2,5,12,8,7,10,12,9,11,7,11,12,11,9,9,7,7,10,10,9,5,11,11,4,3,6,10,12,12,5,11,9,12,9,12,9,12,9,6,4,12,12,6,12,4,11,6,11,7,7,4,10,11,3,4,7,8,4,8,6,8,5,5,10,5,6,10,2,9,10,3,8,8,5,11,11,7,7,10,11,3,7,3,10,12,8,7,9,10,11,6,11,11,9,6,10,8,11,9,6,6,4,5,11,6,8,5,12,10,12,10,12,12,9,5,5,3,12",
        reel_set3: "9,8,11,10,12,7,4,11,9,8,10,8,4,11,8,5,5,3,12,8,6,9,9,7,8,10,8,1,8,5,12,9,10,6,7,6,5,10,7,3,12,9,5,11,7,7,12,8,12,10,7,11,11,12,6,8,8,12,12,9,10,5,11,9,7,7,10,11,10,11,12,10,6,8,6,4,11,10,11,10,5,7,3,11,3,12,6,6,11,11,12,6,11,12,10,7,6,12,9,9,8,5,6,12,11,9,1,11,9,5,9,11,7,6,4,7,7,5,5,11,12,9,9,7,10,11,11,10,4,10,5,6,9,3,11,8,12,11,11,3,6,8,9,12,6,11,11,6,11,9,8,7,4,9,10,12,6,5,4,10,12,5,10,9,10,12,9,6,10,4,12,10,7,5,12,12,10,10,3,12,10,11,8,8,4,6,3,12,6,7,11,7,11,9,8,12,9,12,5,12,7,8,7,11,9,10,12,12,5,4,3,10,6,12,4,10,3,10,9,12,11,7,4,10,9,12,12,1,5,11,12,9,6,9,6,12,7,4,5,12,5~10,8,8,10,6,10,12,12,10,10,8,12,10,12,10,4,12,10,4,6,10,12,12,8,8,10,12,8,8,10,6,10,12,8,6,12,4,6,10,4,4,12,12,6,12,12,4,6,8,6,10,8,10,10,8,10,12,10,10,12,10,6,6,12,10,12,12,8,4,10,10,12,6,10,4,8,8,6,12,12,12,8,10,8,12,6,6,12,8,6,6,8,12,4,10,10,8,12,12,8,10,12,12,6,6,10,12,10,12,8,6,4,6,6,8,6,8,4,10,6,10,6,12,10,12,8,10,12,4,6,8,10,10,12,8,12,10,12,8,8,6,12,4,8,12,12,12,6,12,6,4,12,10,12,8,10,10,4,12,6,12,8,12,12,12~11,9,11,11,11,5,5,9,9,7,7,9,11,7,11,9,3,5,7,9,5,9,11,11,5,9,11,11,7,5,5,9,3,9,9,11,5,9,3,9,11,9,11,7,7,9,7,5,11,9,7,11,9,9,11,7,5,3,9,5,9,11,5,9,11,7,11,11,11,7,7,9,11,11,5,3,7,11,5,11,3,11,5,5,3,9,9,7,3,5,7,11,9,7,3,11,7,9,7,5,11,11,5,9,7,5,5,9,11,3,11,7,5,7,5,9,9,3,11,11,7,11,11,11,7,7,11,3,3,11,9,11,7,11,9~8,12,3,11,5,12,10,11,10,9,12,9,10,6,7,8,9,3,9,11,5,6,9,2,8,6,8,4,7,10,7,4,5,12,10,12,6,12,11,4,11,12,10,7,11,5~8,12,9,7,8,8,11,9,8,11,5,8,6,4,7,9,3,6,10,10,7,10,12,7,10,11,6,9,7,11,9,5,7,7,9,5,9,4,12,6,3,12,12,9,3,9,6,5,4,10,11,12,11,4,3,7,9,5,10,11,9,12,4,11,9,12,9,6,5,7,8,7,12,7,10,5,12,12,9,5,9,10,6,12,12,7,10,7,9,5,5,10,4,10,11,9,11,12,11,5,9,10,11,6,9,10,10,4,4,8,3,12,12,5,10,10,11,8,11,12,11,2,8,11,11,12,4,10,6,12,12,8,10,9,10,8,8,12,5,12,8,8,3,10,11,10,2,8,10,11,12,6,5,7,6,11,3,4,4,10,12,11,12,7,12,12,9,6,10,11,9,6,6,11,10,3,8,7,11,12,12,11,12,9,10,11,5,7,11,6,8,6,6,5,10,3,12,9,5,12,10,11,2,6,6~2,7,12,9,10,10,9,11,12,9,3,10,3,4,9,9,7,8,8,12,6,10,10,12,6,12,12,9,10,6,11,10,5,12,9,11,10,5,7,9,8,5,12,7,5,5,6,10,7,5,12,10,12,10,12,6,12,4,10,9,12,11,10,9,6,11,11,8,9,5,2,4,12,11,12,7,10,10,6,10,3,8,11,6,4,7,5,4,5,7,11,7,10,11,5,8,11,12,11,9,6,11,9,8,11,4,11,8,8,6,11,12,9,3,12,5,7,12,8,6,9,4,3,12,11,9,7,3,8,10,12,11,6,6",
        reel_set5: "5,10,7,9,7,3,4,9,8,9,4,2,1,10,6,8,5,8,6,11,11,3,12,12,11,12,10~9,6,7,8,11,3,10,1,10,5,12,12,11,5,8,12,8,2,9,12,7,4,9,6,10,4,11,3,8,9,11,3,10,12,5,9,7,11,4,8,10,6~12,12,5,6,4,10,10,11,7,12,5,8,1,9,4,7,12,8,10,12,8,10,11,3,9,2,9,6,7,11,9,3,11,5,10,3,9,4,8,6,11,8~7,8,6,10,9,8,4,9,2,12,3,11,4,8,6,10,11,10,7,12,11,1,3,12,5,9,5~1,8,2,10,5,8,4,9,12,7,6,9,8,5,10,10,11,8,12,11,7,9,11,8,11,11,12,5,3,12,4,11,10,8,7,6,3,6,12,9,12,10,3,4,9,10,9~12,11,12,1,10,5,12,8,9,4,6,11,3,10,11,7,11,9,12,8,10,5,4,6,3,8,10,2,9,8,9,7",
    };

    //              api            
    if (player.lastPattern) {
        for (var key in player.lastPattern) {
            result[key] = player.lastPattern[key];
        }
    }

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["index"] = param.index;
    result["counter"] = ++param.counter;
    result["stime"] = new Date().getTime();

    if (player.betPerLine > 0) {
        result["c"] = player.betPerLine;
        result["defc"] = player.betPerLine;
    }
    return result;
};

ApiManager.prototype.GameApi = function (player, prevGameMode, param) {
    var result = {
        balance_bonus: "0",
        balance_cash: player.balance,
        balance: player.balance,
        c: player.betPerLine,
        counter: "1",
        index: "1",
        l: "20",
        na: "s",
        reel_set: 1,
        s: Util.view2String(player.machine.view),
        sa: Util.view2String(player.machine.virtualReels.above),
        sb: Util.view2String(player.machine.virtualReels.below),
        sh: "8",
        stime: new Date().getTime(),
        sver: "5",
        sw: "6",
        st: "react",
        tw: player.machine.winMoney,
        w: player.machine.winMoney,
    };

    result["index"] = param.index;
    result["counter"] = ++param.counter;

    //                                 
    var winLines = player.machine.winLines;
    result["wlc_v"] = winLines.join(';');

    if (player.machine.prevTumbleStatus == "NOTUMBLE" && player.machine.tumbleStatus == "TUMBLE") {
        result["rs_c"] = 1;
        result["rs_m"] = 1;
        result["rs_p"] = 0;
        result["rs"] = "mc";
        result["pw"] = player.machine.tmb_res;
        result["sts"] = player.machine.stsResStr;
        result["sty"] = player.machine.styResStr;
    }

    if (player.machine.currentGame != "FREE" && player.machine.prevTumbleStatus == "TUMBLE") {
        result["na"] = "s";
        result["tw"] = player.machine.winMoney;
        result["w"] = player.machine.winMoney;

        if (player.machine.tumbleStatus == "TUMBLE") {
            result["rs_c"] = 1;
            result["rs_m"] = 1;
            result["rs_p"] = player.machine.tumbleIndex;
            result["rs"] = "mc";
            result["is"] = player.machine.isView.join();
            result["pw"] = player.machine.winMoney;
            result["sts"] = player.machine.stsResStr;
            result["sty"] = player.machine.styResStr;
        } else if (player.machine.tumbleStatus == "NOTUMBLE") {
            result["rs_t"] = player.machine.tumbleIndex;
            result["is"] = player.machine.isView.join();
            result["pw"] = player.machine.winMoney;
            result["sts"] = player.machine.stsResStr;
            result["sty"] = player.machine.styResStr;
            result["na"] = "c";
        }
    }

    if (prevGameMode == "BASE") {
        if (player.machine.currentGame == "FREE") {
            result["rs_c"] = 1;
            result["rs_m"] = 1;
            result["rs_p"] = 0;
            result["rs"] = "mc";
            result["pw"] = 0;
            result["sts"] = player.machine.stsResStr;
            result["sty"] = player.machine.styResStr;
            result["na"] = "s";
        }
    } else if (prevGameMode == "FREE") {
        //                       else 
        if (player.machine.currentGame == "FREE" && player.machine.freeSpinIndex == 1) {
            result["is"] = player.machine.isView.join();
            result["s"] = player.machine.view.join();
            result["fs"] = 1;
            result["fsmax"] = player.machine.freeSpinLength;
            result["sts"] = player.machine.stsResStr;
            result["sty"] = player.machine.styResStr;
            result["fsmul"] = 1;
            result["fswin"] = "0.00";
            result["fsres"] = "0.00";
            result["rs_t"] = 1;
        } else {

            result["tw"] = player.machine.freeSpinWinMoney;

            if (player.machine.prevTumbleStatus == "TUMBLE") {
                result["na"] = "s";
                result["pw"] = player.machine.freeSpinTmbWinMoney;

                if (player.machine.tumbleStatus == "TUMBLE") {
                    result["rs_c"] = 1;
                    result["rs_m"] = 1;
                    result["rs_p"] = player.machine.tumbleIndex;
                    result["rs"] = "mc";
                    result["is"] = player.machine.isView.join();
                    result["pw"] = player.machine.freeSpinTmbWinMoney;
                    result["sts"] = player.machine.stsResStr;
                    result["sty"] = player.machine.styResStr;
                } else if (player.machine.tumbleStatus == "NOTUMBLE") {
                    result["rs_t"] = player.machine.tumbleIndex;
                    result["is"] = player.machine.isView.join();
                    result["pw"] = player.machine.freeSpinTmbWinMoney;
                    result["sts"] = player.machine.stsResStr;
                    result["sty"] = player.machine.styResStr;
                    result["na"] = "c";
                }
            }

            if (player.machine.currentGame == "FREE") {
                result["na"] = "s";
                result["fs"] = player.machine.freeSpinIndex;
                result["fsmax"] = player.machine.freeSpinLength;
                result["fsmul"] = 1;
                result["fswin"] = player.machine.freeSpinWinMoney;
                result["fsres"] = player.machine.freeSpinWinMoney;
            } else if (player.machine.currentGame == "BASE") {
                result["na"] = "c";
                result["fs_total"] = player.machine.freeSpinLength;
                result["fsend_total"] = 0;
                result["fsmul_total"] = 1;
                result["fswin_total"] = player.machine.freeSpinWinMoney;
                result["fsres_total"] = player.machine.freeSpinWinMoney;
            }
        }
    }

    return result;
};

ApiManager.prototype.CollectApi = function (player, param) {
    var result = {
        balance_bonus: "0.0",
        balance_cash: "100,000.00",
        balance: "100,000.00",
        counter: "2",
        index: "3",
        na: "s",
        stime: "1629939208592",
        sver: "5",
    };

    result["balance"] = player.balance;
    result["balance_cash"] = player.balance;
    result["stime"] = new Date().getTime();
    result["index"] = param.index;
    result["counter"] = ++param.counter;

    return result;
};

module.exports = ApiManager;
