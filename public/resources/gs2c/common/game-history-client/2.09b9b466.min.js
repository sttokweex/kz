(window.webpackJsonp = window.webpackJsonp || []).push([
    [2], {
        2657: function(e, t, n) {
            "use strict";
            var a = n(2731);
            n(2822);
            n.d(t, "a", (function() {
                return a.a
            })), n.d(t, "b", (function() {
                return a.b
            })), n.d(t, "d", (function() {
                return a.d
            })), n.d(t, "e", (function() {
                return a.e
            })), n.d(t, "f", (function() {
                return a.f
            })), t.c = a.c
        },
        2659: function(e, t, n) {
            "use strict";
            var a = n(0),
                c = n.n(a),
                s = n(2852),
                l = n.n(s),
                r = n(2),
                o = n.n(r),
                u = n(12),
                i = n(33),
                m = (n(2889), n(1));
            l.a.shape({
                bgt: l.a.oneOfType([l.a.string, l.a.number]).isRequired,
                selectedIndex: l.a.number.isRequired,
                winsMask: l.a.array.isRequired
            });
            var b = function(e) {
                let {
                    data: t,
                    components: n
                } = e;
                const {
                    t: s
                } = Object(a.useContext)(u.a), {
                    translateSymbol: l,
                    imageSymbol: r
                } = Object(a.useContext)(i.a), {
                    winsMask: b,
                    bgt: p,
                    selectedIndex: d
                } = t;
                return c.a.createElement("div", {
                    className: "Bonus"
                }, b.map((e, t) => {
                    const a = d === t,
                        u = s("".concat(l, ".bonus.").concat(p, ".").concat(e)),
                        i = "".concat(m.v).concat(r, "/bonus").concat(p, "/").concat(n[t]),
                        b = o()("Bonus__WinMask", {
                            "Bonus__WinMask--selected": a
                        });
                    return c.a.createElement("div", {
                        className: b,
                        key: "".concat(e).concat(t)
                    }, c.a.createElement("div", {
                        className: "Bonus__WinMask-Component"
                    }, "string" != typeof n[t] ? n[t] : c.a.createElement("img", {
                        src: i,
                        alt: "".concat(n[t]),
                        className: "Img__Source "
                    })), c.a.createElement("div", {
                        className: "Bonus__WinMask-Footer"
                    }, u))
                }))
            };
            t.a = b
        },
        2670: function(e, t, n) {
            "use strict";
            var a = n(0),
                c = n.n(a),
                s = n(12),
                l = n(33),
                r = n(2659),
                o = n(2653);

            function u(e) {
                let {
                    data: t,
                    images: n,
                    result: u
                } = e;
                const {
                    t: i
                } = Object(a.useContext)(s.a), {
                    translateSymbol: m
                } = Object(a.useContext)(l.a), {
                    ind: b,
                    bgt: p,
                    bgid: d,
                    uniqueId: g
                } = t;
                if (!b) return null;
                const f = i("".concat(m, ".bonus.").concat(p, ".").concat(d, "-title"));
                return c.a.createElement(o.b, {
                    uniqueId: g,
                    title: f,
                    result: u
                }, c.a.createElement(r.a, {
                    components: n,
                    data: t
                }))
            }
            u.defaultProps = {
                result: void 0
            };
            var i = u;
            t.a = i
        },
        2671: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return b.a
            }));
            var a = n(0),
                c = n.n(a),
                s = n(2657),
                l = n(1),
                r = n(2653),
                o = n(2659),
                u = n(12),
                i = n(33);
            n(2978);
            var m = function(e) {
                    let {
                        data: t,
                        images: n,
                        collect: m
                    } = e;
                    const {
                        t: b
                    } = Object(a.useContext)(u.a), {
                        imageSymbol: p,
                        translateSymbol: d
                    } = Object(a.useContext)(i.a), {
                        result: g,
                        imageTypes: f,
                        isInitialRound: _,
                        uniqueId: E,
                        selectedIndex: v,
                        bgt: O,
                        winsMask: y
                    } = t;
                    if (_) return null;
                    const j = "".concat(d, ".bonus.").concat(O),
                        w = "".concat(l.v).concat(p, "/bonus").concat(O),
                        N = f.map(e => {
                            const t = ["collect", "gamble"].includes(e) ? b("".concat(j, ".").concat(e)) : "";
                            return c.a.createElement(s.c, {
                                src: "".concat(w, "/").concat(n[e]),
                                alt: e,
                                text: t
                            })
                        });
                    let S;
                    switch (g) {
                        case "collect":
                        case "win":
                            S = b("".concat(j, ".").concat(y[v]));
                            break;
                        default:
                            S = b("".concat(j, ".result.").concat(g))
                    }
                    const x = {
                        custom: {
                            label: "".concat(b("".concat(j, ".result.text")), ": ").concat(S)
                        }
                    };
                    return c.a.createElement(c.a.Fragment, null, c.a.createElement(r.b, {
                        title: b("".concat(j, ".title")),
                        subtitle: b("".concat(j, ".subtitle")),
                        result: x,
                        uniqueId: E
                    }, c.a.createElement("div", {
                        className: "Bonus35"
                    }, c.a.createElement(o.a, {
                        components: N,
                        data: t
                    }))), m)
                },
                b = n(2890);
            t.b = m
        },
        2672: function(e, t, n) {
            "use strict";
            n(48);
            var a = n(0),
                c = n.n(a),
                s = n(2653),
                l = n(12),
                r = n(33),
                o = n(2657),
                u = n(1);

            function i() {
                return (i = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a])
                    }
                    return e
                }).apply(this, arguments)
            }

            function m(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var a = Object.getOwnPropertySymbols(e);
                    t && (a = a.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))), n.push.apply(n, a)
                }
                return n
            }

            function b(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? m(Object(n), !0).forEach((function(t) {
                        p(e, t, n[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : m(Object(n)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }))
                }
                return e
            }

            function p(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }
            const d = e => {
                    let {
                        step: t,
                        bShowDelim: n,
                        result: a
                    } = e;
                    return c.a.createElement("tr", {
                        className: "Steps__Step",
                        key: a
                    }, c.a.createElement("td", {
                        className: "Steps__StepIterator"
                    }), c.a.createElement("td", {
                        className: "Steps__StepValue"
                    }, t), c.a.createElement("td", null, n ? c.a.createElement("span", {
                        className: "Steps__StepDelimiter"
                    }) : null), c.a.createElement("td", {
                        className: "Steps__StepResult"
                    }, a))
                },
                g = e => {
                    const {
                        t: t
                    } = Object(a.useContext)(l.a), {
                        translateSymbol: n
                    } = Object(a.useContext)(r.a), c = "".concat(n, ".bonus.23"), {
                        step: s,
                        win: o,
                        isCollect: u,
                        isWin: i
                    } = e;
                    let m;
                    return m = i || u ? i ? t("".concat(c, ".step.win")) : null : "".concat(t("".concat(c, ".step.result")), ": x").concat(o), {
                        step: u ? t("".concat(c, ".step.collect")) : "".concat(t("".concat(c, ".step.value")), " ").concat(s),
                        bShowDelim: !u,
                        result: m
                    }
                };
            var f = function(e) {
                let {
                    data: t,
                    images: n,
                    getStepData: m = g,
                    result: p
                } = e;
                const {
                    t: f
                } = Object(a.useContext)(l.a), {
                    imageSymbol: _,
                    translateSymbol: E
                } = Object(a.useContext)(r.a), {
                    bgt: v,
                    uniqueId: O
                } = t[0], y = t[t.length - 1], j = "".concat(E, ".bonus.").concat(v), w = "".concat(u.v).concat(_, "/bonus").concat(v, "/"), N = f("".concat(j, ".title")), S = f("".concat(j, ".subtitle")), x = f("".concat(j, ".stepTableTitle"));
                return c.a.createElement(s.b, {
                    title: N,
                    subtitle: S,
                    uniqueId: O,
                    result: b(b({}, (e => {
                        const {
                            isWin: t,
                            isCollect: n,
                            win: a,
                            totalWin: c,
                            rw: l,
                            coef: r
                        } = e;
                        let o = {};
                        return t ? o = {
                            custom: {
                                label: f("".concat(j, ".result.win"))
                            }
                        } : n && (o = {
                            totalWin: c,
                            win: l,
                            custom: [{
                                label: "".concat(f("".concat(j, ".result.collect")), ": x").concat(a)
                            }, {
                                label: Object(s.g)(r, a, l)
                            }]
                        }), o
                    })(y)), p)
                }, c.a.createElement("div", {
                    className: "Bonus23"
                }, c.a.createElement(o.c, {
                    src: "".concat(w).concat(n.bg),
                    alt: "background"
                }), c.a.createElement("div", {
                    className: "Steps"
                }, c.a.createElement("div", {
                    className: "Steps__TableTitle"
                }, x), c.a.createElement("table", null, c.a.createElement("tbody", null, t.map((e, t) => !e.isHidden && c.a.createElement(d, i({}, m(e), {
                    key: t
                }))))))))
            };
            n(2977), t.a = f
        },
        2674: function(e, t, n) {
            "use strict";
            var a = n(0),
                c = n.n(a),
                s = n(2),
                l = n.n(s),
                r = n(2657),
                o = n(2653),
                u = n(12),
                i = n(33),
                m = n(1),
                b = (n(2979), n(5));
            var p = function(e) {
                let {
                    data: {
                        rounds: t,
                        namesImageSubLvl0: n,
                        crbWheel: s
                    },
                    Spin: p
                } = e;
                const {
                    imageSymbol: d,
                    translateSymbol: g
                } = Object(a.useContext)(i.a), {
                    t: f
                } = Object(a.useContext)(u.a), _ = "".concat(m.v).concat(d, "/bonus36/"), E = e => {
                    let {
                        index: t
                    } = e;
                    const a = n[t],
                        l = "x".concat(s[t]);
                    return c.a.createElement(r.c, {
                        alt: l,
                        src: "".concat(_).concat(a, ".png"),
                        text: l,
                        position: "bottom"
                    })
                }, v = (e, t) => c.a.createElement(c.a.Fragment, null, "".concat(e, ": "), c.a.createElement("span", {
                    className: "Action__WinMultiplayer"
                }, "x".concat(t)));
                return t.map(e => {
                    const t = e[e.length - 1],
                        {
                            sublevel: n,
                            wins_mask: a,
                            sind: s,
                            counter: u,
                            bgt: i,
                            uniqueId: m,
                            status: d,
                            swin: O,
                            totalWin: y,
                            roundWin: j,
                            end: w,
                            wp: N,
                            spinData: S,
                            coef: x
                        } = t,
                        h = "".concat(g, ".bonus.").concat(i),
                        I = f("".concat(h, ".title")),
                        B = f("".concat(h, ".subtitle")),
                        C = f("".concat(h, ".collect")),
                        k = f("".concat(h, ".respin")),
                        P = {
                            custom: [{
                                position: "bottom",
                                label: c.a.createElement(c.a.Fragment, null, v(f("".concat(h, ".result.win")), O), c.a.createElement("br", null), v(f("".concat(h, ".result.totalWin")), N))
                            }]
                        };
                    if ("1" === w) {
                        const e = Object(b.x)(x) * Object(b.x)(N);
                        P.totalWin = y, P.win = j, P.custom.push({
                            label: Object(o.g)(x, N, e)
                        })
                    }
                    const W = e => {
                        let {
                            startSlice: t,
                            endSlice: n
                        } = e;
                        return a ? a.slice(t, n).map((e, n) => {
                            let a, s;
                            switch (e) {
                                case "s":
                                    a = c.a.createElement(r.c, {
                                        src: "".concat(_, "visible.png"),
                                        alt: "egg",
                                        text: k
                                    }), s = "--respin";
                                    break;
                                case "np":
                                    a = c.a.createElement(r.c, {
                                        src: "".concat(_, "visible.png"),
                                        alt: "egg",
                                        text: C
                                    }), s = "--collect";
                                    break;
                                default:
                                    a = c.a.createElement(r.c, {
                                        src: "".concat(_, "hidden.png"),
                                        alt: "egg",
                                        text: ""
                                    }), s = "--egg"
                            }
                            const o = l()("ImgWrap", {
                                "ImgWrap--selected": t + n === d
                            }, "ImgWrap".concat(s));
                            return c.a.createElement("div", {
                                className: o,
                                key: n
                            }, a)
                        }) : null
                    };
                    return S ? c.a.createElement(p, {
                        data: S,
                        key: u
                    }) : "-1" === n ? null : c.a.createElement(o.b, {
                        title: I,
                        subtitle: B,
                        key: u,
                        result: P,
                        uniqueId: m
                    }, c.a.createElement("div", {
                        className: "Bonus36"
                    }, c.a.createElement("div", {
                        className: "Bonus36__Left"
                    }, c.a.createElement(W, {
                        startSlice: 0,
                        endSlice: a.length / 2
                    })), c.a.createElement("div", {
                        className: "Bonus36__Middle"
                    }, c.a.createElement(E, {
                        index: s
                    })), c.a.createElement("div", {
                        className: "Bonus36__Right"
                    }, c.a.createElement(W, {
                        startSlice: a.length / 2,
                        endSlice: a.length
                    }))))
                })
            };
            t.a = p
        },
        2681: function(e, t, n) {
            "use strict";
            var a = n(2805);
            n(2828);
            t.a = a.b
        },
        2731: function(e, t, n) {
            "use strict";
            n.d(t, "f", (function() {
                return m
            })), n.d(t, "e", (function() {
                return b
            })), n.d(t, "d", (function() {
                return d
            })), n.d(t, "a", (function() {
                return g
            })), n.d(t, "b", (function() {
                return f
            }));
            n(48), n(473);
            var a = n(0),
                c = n.n(a),
                s = n(2),
                l = n.n(s),
                r = n(33),
                o = n(1),
                u = n(2685);

            function i() {
                return (i = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a])
                    }
                    return e
                }).apply(this, arguments)
            }
            const m = e => "".concat(o.v).concat(e),
                b = e => {
                    const {
                        imageSymbol: t
                    } = Object(a.useContext)(r.a);
                    return m("".concat(t, "/").concat(e))
                },
                p = e => {
                    const t = e.split("."),
                        n = t.pop(),
                        a = t.join("."),
                        c = b(a);
                    return "".concat(c, ".").concat(n, " 1x, ").concat(c, "@2x.").concat(n, " 2x")
                },
                d = e => {
                    const {
                        highResolutionImages: t
                    } = Object(a.useContext)(u.a);
                    return {
                        src: b(e),
                        srcSet: t ? p(e) : "",
                        alt: e
                    }
                };
            const g = e => {
                    let {
                        image: t,
                        children: n = null,
                        className: a = ""
                    } = e;
                    return c.a.createElement("div", {
                        className: "Image ".concat(a, " ").concat(n ? "Image--withChildren" : "")
                    }, c.a.createElement("img", i({}, d(t), {
                        className: "Image__Source"
                    })), n && c.a.createElement("div", {
                        className: "Image__Children"
                    }, n))
                },
                f = e => {
                    let {
                        image: t,
                        className: n = ""
                    } = e;
                    return c.a.createElement("img", i({}, d(t), {
                        className: n
                    }))
                };
            t.c = function(e) {
                let {
                    text: t = "",
                    src: n,
                    alt: a,
                    position: s = ""
                } = e;
                const r = l()("Img__Text", {
                    ["Img__Text--".concat(s)]: s
                });
                return c.a.createElement("div", {
                    className: "Img"
                }, c.a.createElement("img", {
                    src: n,
                    alt: a,
                    className: "Img__Source"
                }), c.a.createElement("div", {
                    className: r
                }, t))
            }
        },
        2805: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return r
            }));
            var a = n(0),
                c = n.n(a),
                s = n(12),
                l = n(2653);
            const r = e => {
                let {
                    label: t,
                    val: n
                } = e;
                return c.a.createElement(c.a.Fragment, null, "".concat(t, ": "), c.a.createElement("span", {
                    className: "FSResult__Value"
                }, n))
            };

            function o(e) {
                let {
                    data: t,
                    toggleResultChunks: n,
                    Spin: r,
                    className: o
                } = e;
                const {
                    t: u
                } = Object(a.useContext)(s.a), {
                    freeSpinMultiplier: i,
                    freeSpinPlayed: m,
                    freeSpinProgress: b,
                    fsMore: p
                } = t, {
                    showProgress: d,
                    showMultiplayer: g,
                    showFsMore: f
                } = n(t), _ = Object(l.f)([d && Object(l.c)("".concat(u("free_spin.free_spin_progress"), ": x").concat(b)), g && Object(l.c)("".concat(u("free_spin.win_multiplier"), ": x").concat(i)), f && p && Object(l.c)("".concat(u("free_spin.free_spin_played_won"), ": ").concat(p))]);
                return c.a.createElement(r, {
                    title: u("free_spin.free_spin_played"),
                    subtitle: m,
                    result: _,
                    data: t,
                    className: o
                })
            }
            r.defaultProps = {
                label: "",
                val: ""
            }, o.defaultProps = {
                toggleResultChunks: e => {
                    let {
                        freeSpinMultiplier: t
                    } = e;
                    return {
                        showMultiplayer: t > 1,
                        showProgress: !1,
                        showFsMore: !0
                    }
                },
                className: "FreeSpin"
            }, t.b = o
        },
        2822: function(e, t, n) {},
        2828: function(e, t, n) {},
        2889: function(e, t, n) {},
        2890: function(e, t, n) {
            "use strict";
            n(8), n(48), n(9);
            var a = n(0),
                c = n.n(a),
                s = n(2767),
                l = n(12),
                r = n(33),
                o = n(2653),
                u = n(2657);

            function i() {
                return (i = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a])
                    }
                    return e
                }).apply(this, arguments)
            }
            const m = "win",
                b = "lose",
                p = "gamble",
                d = e => Object(s.e)(e, s.c),
                g = (e, t) => e.wins.map((n, a) => {
                    const {
                        winsMask: s,
                        currentIndex: l
                    } = e, [r, o] = ((e, t) => {
                        const n = "Bonus35__Item",
                            a = "".concat(n, "--current"),
                            c = "".concat(n, "--closed");
                        return e === t ? ["".concat(n, " ").concat(a), "open"] : e > t ? ["".concat(n, " ").concat(c), "closed"] : [n, "open"]
                    })(a, l);
                    return {
                        img: "".concat(s[a], "_").concat(o),
                        label: c.a.createElement("span", {
                            className: "Bonus35__ItemLabel"
                        }, d(c.a.createElement("span", {
                            className: "Bonus35__ItemTitle"
                        }, t("free_spin.free_spins"))), c.a.createElement("br", null), d(c.a.createElement("span", {
                            className: "Bonus35__ItemNumber"
                        }, n))),
                        className: r
                    }
                }),
                f = e => {
                    let {
                        isLife: t,
                        isEnd: n
                    } = e;
                    return t && n ? m : !t && n ? b : p
                },
                _ = e => {
                    let {
                        data: t,
                        t: n
                    } = e;
                    const a = Object(u.e)("bonus".concat(t.bgt)),
                        s = f(t);
                    return c.a.createElement("div", {
                        className: "Bonus35__Result"
                    }, c.a.createElement("div", {
                        className: "Bonus35__ResultItem"
                    }, c.a.createElement("img", {
                        src: "".concat(a, "/res_lose.png"),
                        alt: "result_image"
                    }), s === b ? d(c.a.createElement("span", {
                        className: "Bonus35__ResultLabel"
                    }, n("round.lose"))) : null), c.a.createElement("div", {
                        className: "Bonus35__ResultItem"
                    }, c.a.createElement("img", {
                        src: "".concat(a, "/res_win.png"),
                        alt: "result_image"
                    }), s !== b ? d(c.a.createElement("span", {
                        className: "Bonus35__ResultLabel"
                    }, n("round.win"))) : null))
                },
                E = (e, t) => {
                    const {
                        translateSymbol: n
                    } = Object(a.useContext)(r.a), s = "".concat(n, ".bonus.").concat(e.bgt), l = Object(o.e)("".concat(t("free_spin.free_spin_played_won"), ": ").concat(e.fsWin), e.fsWin), u = f(e), i = Object(o.c)("".concat(t("".concat(s, ".result.text")), ": ").concat(t("".concat(s, ".").concat(u)))), m = Object(o.e)(c.a.createElement("span", {
                        className: "Action__ResultValue"
                    }, t("gamble.collect")), e.isCollect);
                    return Object(o.f)([l, i, m])
                },
                v = e => {
                    const t = Object(u.e)("bonus".concat(e.bgt));
                    return e => {
                        let {
                            img: n,
                            label: a,
                            className: s
                        } = e;
                        return c.a.createElement("div", {
                            className: "Bonus35__Item ".concat(s)
                        }, c.a.createElement("img", {
                            className: "Bonus35__ItemImage",
                            src: "".concat(t, "/").concat(n, ".png"),
                            alt: n
                        }), a)
                    }
                };
            t.a = e => {
                let {
                    data: t,
                    getBonusResult: n = E,
                    getBonus35Items: s = g,
                    getBonusItemComponent: r = v,
                    Result: u = _,
                    actionProps: m = {}
                } = e;
                const {
                    t: b
                } = Object(a.useContext)(l.a), p = n(t, b), d = s(t, b), f = r(t, b);
                return c.a.createElement(o.b, i({
                    uniqueId: t.uniqueId,
                    title: b("round.bonusTitle"),
                    result: p
                }, m), c.a.createElement("div", {
                    className: "Bonus35"
                }, c.a.createElement("div", {
                    className: "Bonus35__Items"
                }, d.map((e, t) => c.a.createElement(f, i({
                    key: t
                }, e)))), c.a.createElement(u, {
                    data: t,
                    t: b
                })))
            }
        },
        2977: function(e, t, n) {},
        2978: function(e, t, n) {},
        2979: function(e, t, n) {}
    }
]);